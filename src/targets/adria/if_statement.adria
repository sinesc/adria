
var Node = require('./base/node');
var Scope = require('./scope');

export IfStatement = proto (Node) {

    toSourceNode: func() {

        var result = this.csn();

        this.each(func(child) {

            if (child.key === 'else_if' || child.key === 'else') {
                result.add(' else ');
            }

            result.add(child.toSourceNode());
        });

        return result;
    },
};

export IfConditional = proto (Scope) {

    toSourceNode: func() {

        var result = this.csn();
        result.add([ 'if (', this.get('condition').toSourceNode(), ') {' + this.nl(1) ]);

        var body = this.get('body').toSourceNode();
        result.add([ this.refsToSourceNode(), body, this.nl(-1) + '}' ]);

        return result;
    },
};

export IfUnconditional = proto (Scope) {

    toSourceNode: func() {

        var result = this.csn();
        result.add([ '{' + this.nl(1) ]);

        var body = this.get('body').toSourceNode();
        result.add([ this.refsToSourceNode(), body, this.nl(-1) + '}' ]);

        return result;
    },
};