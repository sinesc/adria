/*
 * Adria transcompiler
 *
 * Copyright (C) 2014 Dennis MÃ¶hlmann <mail@dennismoehlmann.de>
 * Licensed under the MIT license.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
module Token = proto {

    data    : '',
    type    : 0,
    start   : 0,
    pos     : null,

    /**
     * construct a new token
     *
     * @param string data the matched string
     * @param finite type token type id from Type Enum
     * @param finite start absolute start-position in the source string
     * @param finite col calculated column
     * @param finite row calculated row
     */
    constructor: func(string data, finite type, finite start, finite col, finite row) {

        this.data = data;
        this.type = type;
        this.start = start;
        this.pos = new Position(col, row);
    },
};

export Position = proto {

    col: 0,
    row: 0,

    constructor: func(finite col, finite row) {
        this.col = col;
        this.row = row;
    },

    toString: func() {
        return 'line ' + this.row + ', column ' + this.col;
    },
};