{"version":3,"file":"out.js","sources":["adria-framework.js","/root/dev/adria/src/prototype.adria","/root/dev/adria/src/util.adria","/root/dev/adria/src/xregexp.adria","/root/dev/adria/src/template/tags.adria","/root/dev/adria/src/template.adria","/root/dev/adria/src/cache.adria","/root/dev/adria/src/transform/scope.adria","/root/dev/adria/src/transform/unresolved_symbol.adria","/root/dev/adria/src/transform.adria","/root/dev/adria/src/parser/generator_state.adria","/root/dev/adria/src/parser/definition/node.adria","/root/dev/adria/src/parser/definition.adria","/root/dev/adria/src/parser.adria","/root/dev/adria/src/tokenizer/result.adria","/root/dev/adria/src/tokenizer.adria","/root/dev/adria/src/definition_parser/path.adria","/root/dev/adria/src/definition_parser.adria","/root/dev/adria/src/language_parser/capture_node.adria","/root/dev/adria/src/language_parser.adria","/root/dev/adria/src/extensions/adria_node.adria","/root/dev/adria/src/extensions/adria_parser.adria","/root/dev/adria/src/extensions/adria_transform.adria","/root/dev/adria/src/extensions/adriadebug_parser.adria","/root/dev/adria/src/extensions/adriadebug_transform.adria","/root/dev/adria/main.adria"],"names":[],"mappings":"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","sourcesContent":["/**\n * application construction function. becomes application reference just *prior* to construction.\n * allows use of application-depending objects within application constructor\n */\nvar application;\n\n/**\n * application-wide module importer\n */\nvar __require;\n\n/**\n * hidden module registration function (shadowed by module parameter)\n */\nvar module;\n\n/**\n * module loader\n */\n(function() {\n    var Module = function(name, func) {\n        this.name = name;\n        this.exports = { };\n        func(this);\n    };\n    Module.prototype.exports = null;\n    Module.prototype.name = '';\n    var modules = { };\n    module = function(name, func) {\n        modules[name] = new Module(name, func);\n    };\n    application = function(Constructor /*, params... */) {\n        function Application() {\n            application = this;\n            Constructor.apply(this, Array.prototype.slice.call(arguments));\n        };\n        Application.prototype = Constructor.prototype;\n        var args = Array.prototype.slice.call(arguments);\n        args[0] = null;\n        return new (Function.prototype.bind.apply(Application, args));\n    };\n    __require = function(file) {\n        return modules[file].exports;\n    }; \n})();\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nvar firstToUpper = function(match1) {\r\n    return match1.replace('_', '').toUpperCase();\r\n};\r\n\r\nString::snakeToCamel = function(upperFirst) {\r\n\r\n    if (upperFirst) {\r\n        return this.replace(/((?:^|\\_)[a-z])/g, firstToUpper);\r\n    } else {\r\n        return this.replace(/(\\_[a-z])/g, firstToUpper);\r\n    }\r\n};\r\n\r\n/*\r\n * string format\r\n */\r\n\r\nString::format = function() {\r\n\r\n    var args = Array::slice.call(arguments);\r\n\r\n    // if first argument is array or object, use only that\r\n\r\n    if (args.length === 1 && args[0] instanceof Object) {\r\n        args = args[0];\r\n    }\r\n\r\n    return this.replace(/(.?)\\$([0-9a-z]+)(\\:[0-9a-z]+)?/ig, function(str, prefix, matchname, options) {\r\n\r\n        // double $$ means to output a $ instead of a formatstring\r\n\r\n        if (prefix == '$') {\r\n            return '$' + matchname + (options !== undefined ? options : '');\r\n        }\r\n\r\n        //!todo use of options\r\n\r\n        return (args[matchname] !== undefined ? prefix + args[matchname] : str);\r\n    });\r\n};\r\n\r\n\r\n/*\r\n * repeat string\r\n */\r\n\r\nString::repeat = function(count) {\r\n\r\n    if (count < 1) {\r\n        return '';\r\n    }\r\n\r\n    var result = '';\r\n    var pattern = this.valueOf();\r\n\r\n    while (count > 1) {\r\n\r\n        // append every time a 1 would be shifted out\r\n\r\n        if (count & 1) {\r\n            result += pattern;\r\n        }\r\n\r\n        // double pattern length, halv count, next rest now in bit 1\r\n\r\n        count >>= 1;\r\n        pattern += pattern;\r\n    }\r\n\r\n    // unrolled from count > 0\r\n\r\n    result += pattern;\r\n\r\n    return result;\r\n};\r\n\r\nString.repeat = function(count, string) {\r\n\r\n    string = (string === undefined ? ' ' : string);\r\n    return string.repeat(count);\r\n};\r\n\r\nString::occurances = function(search) {\r\n\r\n    var count = 0;\r\n    var index = this.indexOf(search);\r\n\r\n    while (index !== -1) {\r\n        count++;\r\n        index = this.indexOf(search, index + 1);\r\n    }\r\n\r\n    return count;\r\n};\r\n\r\n/*\r\n * pad string\r\n */\r\n\r\nString::padLeft = function(paddedLength, padChar) {\r\n\r\n    padChar = (padChar !== undefined ? padChar : ' ');\r\n    return padChar.repeat(paddedLength - this.length) + this.valueOf();\r\n};\r\n\r\nString::padRight = function(paddedLength, padChar) {\r\n\r\n    padChar = (padChar !== undefined ? padChar : ' ');\r\n    return this.valueOf() + padChar.repeat(paddedLength - this.length);\r\n};\r\n\r\n\r\n/*\r\n * random string (static)\r\n */\r\n\r\nString.random = function(length, chars) {\r\n\r\n    var chars       = (chars === undefined ? '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' : chars);\r\n    var numChars    = chars.length;\r\n    var result      = '';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        var rnum = Math.floor(Math.random() * numChars);\r\n        result += chars.substr(rnum, 1);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nString::stripPostfix = function(postfix) {\r\n\r\n    var len;\r\n\r\n    if (postfix instanceof Array) {\r\n\r\n        for (var i in postfix) {\r\n\r\n            len = postfix[i].length;\r\n\r\n            if (this.substr(-len) === postfix[i]) {\r\n                return this.substr(0, this.length - len);\r\n            }\r\n        }\r\n\r\n        return this.valueOf();\r\n    }\r\n\r\n    len = postfix.length;\r\n    return (this.substr(-len) === postfix ? this.substr(0, this.length - len) : this.valueOf());\r\n};\r\n\r\nString::hasPostfix = function(postfix) {\r\n\r\n    return (this.substr(-postfix.length) === postfix);\r\n};\r\n\r\n/*\r\n * Constructor, chain to parent prototype\r\n */\r\n\r\nFunction::derive = function(constructor) {\r\n\r\n    var Surrogate = function() { };\r\n    Surrogate.prototype = this.prototype;\r\n    constructor.prototype = new Surrogate();\r\n    constructor::constructor = constructor;\r\n    return constructor;\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n//!todo this file needs lots of cleanup\r\nvar sysutil = require('util');\r\nvar crypto = require('crypto');\r\n\r\n\r\n/**\r\n * DebugLog constructor\r\n */\r\nvar DebugLog = function(resetEach) {\r\n\r\n    this.start  = Date.now();\r\n    this.last   = this.start;\r\n\r\n    console.log('=============================: Log started');\r\n};\r\n\r\nDebugLog.prototype.print = function(source, message, indent) {\r\n\r\n    var now         = Date.now();\r\n    var diffStart   = now - this.start;\r\n    var diffLast    = now - this.last;\r\n\r\n    this.last = now;\r\n\r\n    console.log(('+' + diffLast + '/' + diffStart).padLeft(10) + 'ms: ' + source.padLeft(15) + ': ' + ' '.repeat(indent) + message);\r\n};\r\n\r\nvar debugLog = null;\r\nvar indent = 0;\r\nvar enabled = false;\r\n\r\nvar log = function(source, message, offset) {\r\n\r\n    if (enabled !== true) {\r\n        return;\r\n    }\r\n\r\n    if (debugLog === null) {\r\n        debugLog = new DebugLog(source === true);\r\n    }\r\n\r\n    if (offset < 0) {\r\n        indent += offset;\r\n    }\r\n\r\n    if (message !== undefined) {\r\n        debugLog.print(source, message, indent);\r\n    }\r\n\r\n    if (offset > 0) {\r\n        indent += offset;\r\n    }\r\n};\r\n\r\nlog.enable = function() {\r\n    enabled = true;\r\n};\r\n\r\nlog.disable = function() {\r\n    enabled = false;\r\n};\r\n\r\n\r\nvar dump = function(obj, depth, showHidden) {\r\n\r\n    depth = (depth === undefined ? 2 : depth);\r\n    showHidden = (showHidden === undefined ? false : showHidden);\r\n\r\n    console.log(sysutil.inspect(obj, showHidden, depth));\r\n};\r\n\r\n\r\nvar tree = function(object, structure) {\r\n\r\n    // object to work with is required. structure may be dot-separated string or array\r\n\r\n    assert(object instanceof Object);\r\n    structure = (structure instanceof Array ? structure : structure.split('.'));\r\n\r\n    var current = object;\r\n\r\n    structure.forEach(function(name) {\r\n\r\n        if (name.substr(-2) !== '[]') {\r\n            current[name] = current[name] || { };\r\n        } else {\r\n            name = name.substr(0, name.length -2);\r\n            current[name] = current[name] || [ ];\r\n        }\r\n\r\n        current = current[name];\r\n    });\r\n\r\n    return current;\r\n};\r\n\r\n/*\r\n * enum type\r\n */\r\nvar Enumeration = function(options) {\r\n\r\n    var bit = 0;\r\n\r\n    for (var id in options) {\r\n        if (this[options[id]] === undefined) {\r\n            this[options[id]] = 1 << bit;\r\n            bit += 1;\r\n        }\r\n        if (bit >= 32) {\r\n            throw new Error('options is expected to be an array and contain <= 32 unique elements');\r\n        }\r\n    }\r\n\r\n    return Object.freeze(this);\r\n};\r\n\r\nvar Enum = function(options) {\r\n    return new Enumeration(options);\r\n};\r\n\r\n\r\n/*\r\n * set type\r\n */\r\nvar Set = function(value) {\r\n\r\n    this.data = { };\r\n\r\n    if (value !== undefined) {\r\n        this.add(value);\r\n    }\r\n};\r\n\r\n/**\r\n * merge one or more sets with current and return result\r\n * does not modify this set\r\n *\r\n * @param Set, ... sets to merge\r\n * @return Set resulting Set\r\n */\r\nSet.prototype.merge = function() {\r\n\r\n    var args    = Array.prototype.slice.call(arguments, 0);\r\n    var result  = new Set();\r\n\r\n    for (var key in this.data) {\r\n        result.data[key] = true;\r\n    }\r\n\r\n    for (var id in args) {\r\n        for (var key in args[id].data) {\r\n            result.data[key] = true;\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * add element, array of elements or Set to this Set\r\n *\r\n * @param value\r\n */\r\nSet.prototype.add = function(value) {\r\n\r\n    var data = this.data;\r\n\r\n    if (value instanceof Array) {\r\n\r\n        value.forEach(function(element) {\r\n            data[element] = true;\r\n        });\r\n\r\n    } else if (value instanceof Set) {\r\n\r\n        for (var element in value.data) {\r\n            data[element] = true;\r\n        }\r\n\r\n    } else {\r\n\r\n        data[value] = true;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * remove element, array of elements or Set from this Set\r\n *\r\n * @param value\r\n */\r\nSet.prototype.remove = function(value) {\r\n\r\n    var data = this.data;\r\n\r\n    if (value instanceof Array) {\r\n\r\n        value.forEach(function(element) {\r\n            delete data[element];\r\n        });\r\n\r\n    } else if (value instanceof Set) {\r\n\r\n        for (var element in value.data) {\r\n            delete data[element];\r\n        }\r\n\r\n    } else {\r\n        delete data[value];\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * check if set has single value, all values of array or set\r\n *\r\n * @param value\r\n * @return boolean\r\n */\r\nSet.prototype.has = function(value) {\r\n\r\n    var data = this.data;\r\n\r\n    if (value instanceof Array) {\r\n\r\n        for (var id in value) {\r\n            if (data.hasOwnProperty(value[id]) !== true) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    } else if (value instanceof Set) {\r\n\r\n        var other = value.data;\r\n\r\n        for (var key in other) {\r\n            if (data.hasOwnProperty(key) !== true) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    } else {\r\n\r\n        return (data.hasOwnProperty(value));\r\n    }\r\n};\r\n\r\n/**\r\n * returns key missing in this set to equal another set or array\r\n *\r\n * @param value\r\n * @return boolean\r\n */\r\nSet.prototype.missing = function(value) {\r\n\r\n    var result = new Set();\r\n    var data = this.data;\r\n\r\n    if (value instanceof Array) {\r\n\r\n        for (var id in value) {\r\n            if (data[value[id]] !== true) {\r\n                result.add(value[id]);\r\n            }\r\n        }\r\n\r\n    } else if (value instanceof Set) {\r\n\r\n        var other = value.data;\r\n\r\n        for (var key in other) {\r\n            if (data[key] !== true) {\r\n                result.add(key);\r\n            }\r\n        }\r\n\r\n    } else {\r\n\r\n        throw new Error('invalid argument');\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * return set values as array\r\n *\r\n * @return Array\r\n */\r\nSet.prototype.toArray = function() {\r\n    return Object.keys(this.data);\r\n};\r\n\r\n/**\r\n * check if the set is empty\r\n *\r\n * @return boolean\r\n */\r\nObject.defineProperty(Set.prototype, 'empty', {\r\n    get : function() {\r\n        for (var dummy in this.data) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    enumerable : true,\r\n    configurable : true\r\n});\r\n\r\n/**\r\n * number of elements in set\r\n *\r\n * @return integer\r\n */\r\nObject.defineProperty(Set.prototype, 'length', {\r\n    get : function() {\r\n        var len = 0;\r\n        for (var dummy in this.data) {\r\n            len++;\r\n        }\r\n        return len;\r\n    },\r\n    enumerable : true,\r\n    configurable : true\r\n});\r\n\r\n/**\r\n * simple command line processor\r\n *\r\n * handlers['_default'] expected to handle values without parameter prefix\r\n * handlers['_switch'] expected to handle values without parameter value\r\n *\r\n * @param context execution context for given handlers\r\n * @param handlers object of handler functions\r\n */\r\nvar processOptions = function(context, handlers) {\r\n\r\n    var next = '_default';\r\n\r\n    for (var i = 2; i < process.argv.length; i++) {\r\n\r\n        var argv = process.argv[i];\r\n        var prefix = argv.slice(0, 2);\r\n        var param = argv.slice(2);\r\n\r\n        if (prefix == \"--\" && typeof handlers[param] === 'function') {\r\n\r\n            // option with value\r\n\r\n            next = param;\r\n\r\n        } else if (prefix == \"--\") {\r\n\r\n            // switch\r\n\r\n            if (handlers['_switch'] !== undefined) {\r\n                handlers['_switch'].call(context, param);\r\n            }\r\n\r\n        } else {\r\n\r\n            // value from previous option\r\n\r\n            if (handlers[next] !== undefined) {\r\n                handlers[next].call(context, argv);\r\n            }\r\n\r\n            next = '_default';\r\n        }\r\n    }\r\n};\r\n\r\nvar home = function() {\r\n    return process.env[process.platform == 'win32' ? 'USERPROFILE' : 'HOME'];\r\n};\r\n\r\nvar md5 = function(input) {\r\n\r\n    var md5sum = crypto.createHash('md5');\r\n    md5sum.update(input);\r\n    return md5sum.digest('hex');\r\n};\r\n\r\nexports.log = log;\r\nexports.dump = dump;\r\nexports.tree = tree;\r\nexports.Enum = Enum;\r\nexports.Set = Set;\r\nexports.processOptions = processOptions;\r\nexports.md5 = md5;\r\nexports.home = home;","/*\n * The MIT License (MIT)\n *\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nmodule XRegExp = require('xregexp').XRegExp;\n\n// check XRegExp version since anything below 3.0.0 pre has serious performance problems with our specific use-case\n\nif (parseInt(XRegExp.version) < 3) {\n    console.log('XRegExp version 3 or above strongly recommended.');\n    console.log('If it is not yet available in NPM, get it here');\n    console.log('   https://github.com/slevithan/xregexp');\n    console.log('and either replace xregexp-all.js in node_modules/xregexp');\n    console.log('or copy/rename it to adria/src/xregexp.js (replace this file)');\n    console.log('Comment/remove process.exit(); in adria/src/xregexp.js to proceed');\n    console.log('anyway (tokenizing will be about 15-20 times slower)');\n    process.exit();\n}\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar Util = require('../util');\r\n\r\n/**\r\n * Template-tags constructor\r\n */\r\nvar Tags = function() {\r\n\r\n    this.ifDepth    = 0;\r\n    this.eachDepth  = 0;\r\n    this.remDepth   = 0;\r\n    this.resultVar  = '';\r\n};\r\n\r\nTags.prototype.supports = function(tagName) {\r\n    return (this['tag:' + tagName] !== undefined);\r\n};\r\n\r\nTags.prototype.tag = function(tagName, params) {\r\n\r\n    if (typeof this['tag:' + tagName] !== 'function') {\r\n        throw new Error('unknown tag ' + tagName + ' called');\r\n    }\r\n\r\n    return this['tag:' + tagName](params);\r\n};\r\n\r\nTags.prototype.text = function(string) {\r\n\r\n    var repl = string.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n').replace(/\\*\\//g, '*\\\\/').replace(/'/g, '\\\\\\'');\r\n    return this.resultVar + ' += \\'' + repl + '\\';\\n';\r\n};\r\n\r\nTags.prototype.fallback = function() {\r\n    return 'out';\r\n};\r\n\r\nTags.prototype.begin = function() {\r\n\r\n    this.ifDepth = 0;\r\n    this.eachDepth = 0;\r\n    this.remDepth = 0;\r\n    this.resultVar = '__r' + String.random(8);\r\n\r\n    return '(function() { var ' + this.resultVar + ' = \\'\\'; with (this) {\\n';\r\n};\r\n\r\nTags.prototype.end = function() {\r\n\r\n    if (this.ifDepth > 0) {\r\n        throw new Error('unclosed if-tag(s)');\r\n    } else if (this.eachDepth > 0) {\r\n        throw new Error('unclosed each-tag(s)');\r\n    } else if (this.remDepth > 0) {\r\n        throw new Error('unclosed rem-tag(s)');\r\n    }\r\n\r\n    return '} return ' + this.resultVar + '; }).call(this);';\r\n};\r\n\r\nTags.prototype['tag:out'] = function(params) {\r\n\r\n    return this.resultVar + ' += (typeof ' + params + ' !== \\'undefined\\' ? ' + params + ' : \\'\\');\\n';\r\n};\r\n\r\nTags.prototype['tag:if'] = function(params) {\r\n\r\n    this.ifDepth += 1;\r\n    return 'if (' +  params + ') {\\n';\r\n};\r\n\r\nTags.prototype['tag:else'] = function() {\r\n\r\n    if (this.ifDepth === 0) {\r\n        throw new Error('else: no matching if found');\r\n    }\r\n    return '} else {\\n';\r\n};\r\n\r\nTags.prototype['tag:elseif'] = function(params) {\r\n\r\n    if (this.ifDepth === 0) {\r\n        throw new Error('elseif: no matching if found');\r\n    }\r\n\r\n    return '} else if (' + params + ') {\\n';\r\n};\r\n\r\nTags.prototype['tag:/if'] = function() {\r\n\r\n    if (this.ifDepth === 0) {\r\n        throw new Error('/if: no matching if found');\r\n    }\r\n\r\n    this.ifDepth -= 1;\r\n\r\n    return '}\\n';\r\n};\r\n\r\nTags.prototype['tag:each'] = function(params) {\r\n\r\n    params = params.split(' ');\r\n\r\n    if (params[1] !== 'in') {\r\n        throw new Error('each: syntax error');\r\n    }\r\n\r\n    var hash = String.random(6);\r\n\r\n    var options = {\r\n        name: params[0],\r\n        from: params[2],\r\n        id  : '__i' + hash,\r\n        keys: '__k' + hash,\r\n        len : '__l' + hash\r\n    };\r\n\r\n    this.eachDepth += 1;\r\n\r\n    return '(function() { \\\r\n                if ($from instanceof Object !== true) return; \\\r\n                var $keys = ($from instanceof Array ? null : Object.keys($from)); \\\r\n                var $len = ($keys === null ? $from.length : $keys.length); \\\r\n                for (var $id = 0; $id < $len; $id++) { \\\r\n                    var $name = $from[($keys === null ? $id : $keys[$id])];\\\r\n                    var each = { first: ($id === 0), last: ($id === $len -1), key: ($keys === null ? $id : $keys[$id]) };\\n'.format(options);\r\n};\r\n\r\nTags.prototype['tag:/each'] = function(params) {\r\n\r\n    if (this.eachDepth === 0) {\r\n        throw new Error('/each: no matching each found');\r\n    }\r\n\r\n    this.eachDepth -= 1;\r\n\r\n    return '}})();\\n';\r\n};\r\n\r\nTags.prototype['tag:rem'] = function(params) {\r\n\r\n    if (this.remDepth > 0) {\r\n        throw new Error('rem: nested comments not supported');\r\n    }\r\n\r\n    if (params) {\r\n        return '/* ' + params + ' */';\r\n    } else {\r\n        this.remDepth += 1;\r\n        return '/* ';\r\n    }\r\n};\r\n\r\nTags.prototype['tag:/rem'] = function() {\r\n\r\n    if (this.remDepth === 0) {\r\n        throw new Error('/rem: no matching each found');\r\n    }\r\n\r\n    this.remDepth -= 1;\r\n\r\n    return ' */';\r\n};\r\n\r\n/*\r\n * export\r\n */\r\nmodule.exports = Tags;","/*\n * The MIT License (MIT)\n *\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nvar XRegExp = require('./xregexp');\nvar fs      = require('fs');\nvar Tags    = require('./template/tags');\n\n/**\n * Basic templating class supporting variable replacement and simple control structures\n * in template-textfiles.\n */\nmodule Template = proto {\n\n    basePath: 'templates/',\n\n    constructor: function(tags, delimiterOpen, delimiterClose) {\n\n        tags            = (tags === undefined ? new Tags() : tags);\n        delimiterOpen   = (delimiterOpen === undefined ? '<' : delimiterOpen);\n        delimiterClose  = (delimiterClose === undefined ? '>' : delimiterClose);\n\n        this.tags = tags;\n        this.data = { };\n        this.delimiter = { open: XRegExp.escape(delimiterOpen), close: XRegExp.escape(delimiterClose) };\n    },\n\n    /**\n     * assign data to template\n     *\n     * @param string name reference name from within template file\n     * @param any value data to assign\n     */\n    assign: function(name, value) {\n\n        this.data[name] = value;\n    },\n\n    parse: function(input) {\n\n        var self        = this;\n        var tplString   = '';\n        var lastIndex   = 0;\n        var lastTail    = '';\n\n        var delim       = this.delimiter;\n        var regex       = XRegExp(' (?<head>  [\\\\ \\\\t]*)' +\n                      delim.open + '(?<ident> /?[a-z_][a-z0-9_\\\\[\\\\]\\\\.]+) \\\\s* (?<params>.*?)' + delim.close +\n                                   '(?<tail>  \\\\n){0,1}', 'xis');\n\n        // convert to linux format\n\n        input = input.replace(/\\r/g, '');\n\n        // generate javascript template code\n\n        tplString += self.tags.begin();\n\n        XRegExp.forEach(input, regex, function(match, i) {\n\n            // text between tags\n\n            if (i == 0 && match.index > 0) {\n                tplString += self.tags.text(lastTail + input.substring(0, match.index) + match.head);\n            } else if (i > 0) {\n                tplString += self.tags.text(lastTail + input.substring(lastIndex, match.index) + match.head);\n            }\n\n            lastIndex = match.index + match[0].length;\n            lastTail = (match.tail !== undefined ? match.tail : '');\n\n            // default to fallback tag\n\n            if (match.params === '' && match.ident !== '' && self.tags.supports(match.ident) !== true) {\n                match.params = match.ident;\n                match.ident = self.tags.fallback();\n            }\n\n            // check if tag exists\n\n            if (self.tags.supports(match.ident) !== true) {\n                throw new Error('unsupported tag ' + match.ident + ' encountered');\n            }\n\n            // add tag code\n\n            tplString += self.tags.tag(match.ident, match.params);\n        });\n\n        // add text from behind last tag, then close template and return\n\n        tplString += self.tags.text(lastTail + input.substring(lastIndex));\n        tplString += self.tags.end();\n\n        return tplString;\n    },\n\n    exec: function(tplString) {\n        return (function() {\n            return eval(tplString);\n        }).call(this.data);\n    },\n\n    fetch: function(input) {\n\n        var tplString = this.parse(input);\n        return this.exec(tplString);\n    },\n\n    fetchFile: function(file) {\n        return this.fetch(fs.readFileSync(this.basePath + file, 'UTF-8'));\n    },\n\n};\n\nTemplate.Tags = Tags;\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar fs = require('fs');\r\nvar path = require('path');\r\n\r\nvar util = require('./util');\r\n\r\nmodule Cache = proto {\r\n\r\n    baseDir: util.home() + '/.adria/cache/',\r\n\r\n    constructor: function() {\r\n        this.checkBaseDir();\r\n    },\r\n\r\n    /**\r\n     * ensures the base cache directory exists\r\n     */\r\n    checkBaseDir: function() {\r\n\r\n        if (this.baseDir.slice(0, 1) !== '/' || this.baseDir.slice(-1) !== '/') {\r\n            throw new Error('cache.baseDir needs to be an absolute path');\r\n        }\r\n\r\n        var parts = this.baseDir.slice(1, -1).split('/');\r\n        var path = '/';\r\n\r\n        for (var id, part in parts) {\r\n\r\n            path += part;\r\n\r\n            if (fs.existsSync(path)) {\r\n                if (isFile(path)) {\r\n                    throw new Error(path + ' is a file');\r\n                }\r\n            } else {\r\n                fs.mkdirSync(path, (parseInt(id) === parts.length -1 ? 511 /*0777*/ : 493 /*0755*/));\r\n            }\r\n\r\n            path += '/';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * returns cache name (md5hash) for given file\r\n     *\r\n     * @param file\r\n     */\r\n    cacheName: function(file) {\r\n\r\n        var absPath = path.resolve(process.cwd(), file);\r\n        return this.baseDir + util.md5(absPath);\r\n    },\r\n\r\n    /**\r\n     * fetches data for given file from cache\r\n     *\r\n     * @param file\r\n     * @param variants array of variants to fetch as well\r\n     * @result object of cache result variants\r\n     */\r\n    fetch: function(file, variants) {\r\n\r\n        var cacheFile = this.cacheName(file);\r\n\r\n        if (fs.existsSync(cacheFile) && fs.existsSync(file)) {\r\n\r\n            var inputStat = fs.statSync(file);\r\n            var cacheStat = fs.statSync(cacheFile);\r\n\r\n            if (cacheStat.isFile() && inputStat.mtime.toString() === cacheStat.mtime.toString()) {\r\n\r\n                var resultData = { };\r\n\r\n                for (var id, variant in variants) {\r\n                    if (variant === 'base') {\r\n                        util.log('Cache', 'reading from ' + cacheFile, 0);\r\n                        resultData['base'] = JSON.parse(fs.readFileSync(cacheFile, 'UTF-8'));\r\n                    } else {\r\n                        resultData[variant] = JSON.parse(fs.readFileSync(cacheFile + '.' + variant, 'UTF-8'));\r\n                    }\r\n                }\r\n\r\n                return resultData;\r\n\r\n            } else {\r\n\r\n                util.log('Cache', 'cache miss for ' + file, 0);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * writes data for given file to cache\r\n     *\r\n     * @param file\r\n     * @param variants object of cached variants\r\n     */\r\n    insert: function(file, variants) {\r\n\r\n        assert(fs.existsSync(file));\r\n\r\n        var inputStat = fs.statSync(file);\r\n        var cacheFile = this.cacheName(file);\r\n\r\n        // write output text and set filedate to input file\r\n\r\n        for (var ext, variant in variants) {\r\n\r\n            if (ext === 'base') {\r\n                util.log('Cache', 'writing to ' + cacheFile, 0);\r\n                fs.writeFileSync(cacheFile, JSON.stringify(variant));\r\n                fs.utimesSync(cacheFile, inputStat.atime, inputStat.mtime);\r\n            } else {\r\n                fs.writeFileSync(cacheFile + '.' + ext, JSON.stringify(variant));\r\n            }\r\n        }\r\n    },\r\n\r\n};\r\n\r\nvar isFile = function(path) {\r\n    var stat = fs.statSync(path);\r\n    return stat.isFile();\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n\r\n//!todo no longer in use, check removal\r\n\r\n/**\r\n * hierarchy of scopes\r\n */\r\nvar Scope = function() {\r\n\r\n    this.children       = null;\r\n    this.parent         = null;\r\n    this.allow_descend  = true;\r\n    this.allow_ascend   = true;\r\n};\r\n\r\n/**\r\n * create a child-scope of the same type as this scope is\r\n */\r\nScope.prototype.create = function(name) {\r\n\r\n    var existing = this.get(name);\r\n    if (existing instanceof Scope) {\r\n        return existing;\r\n    }\r\n\r\n    var OwnType = Object.getPrototypeOf(this).constructor;\r\n    var child = new OwnType();\r\n\r\n    child.parent = this;\r\n    child.name = name;\r\n\r\n    if (this.children instanceof Array !== true) {\r\n        this.children = [];\r\n    }\r\n\r\n    this.children.push(child);\r\n    return child;\r\n};\r\n\r\n/**\r\n * attach existing scope with new name, reference other's children as own\r\n */\r\nScope.prototype.attach = function(name, other) {\r\n\r\n    assert(other != null);\r\n\r\n    var child = this.create(name);\r\n    child.allow_ascend  = false;\r\n    child.children      = other.children;\r\n    child.origin        = other; //!todo debug only\r\n    return child;\r\n};\r\n\r\n/**\r\n * returns true if this is the root scope (scope without parent)\r\n *\r\n * @return bool\r\n */\r\nScope.prototype.is_root = function() {\r\n    return this.parent === null;\r\n};\r\n\r\n/**\r\n * returns true if this is a child scope\r\n *\r\n * @return bool\r\n */\r\nScope.prototype.is_child = function() {\r\n    return this.parent !== null;\r\n};\r\n\r\n/**\r\n * returns true if this is scope has child-scopes\r\n *\r\n * @return bool\r\n */\r\nScope.prototype.has_children = function() {\r\n    return (this.children instanceof Array && this.children.length > 0);\r\n};\r\n\r\n/**\r\n * returns root scope\r\n *\r\n * @return Scope\r\n */\r\nScope.prototype.root = function() {\r\n\r\n    var current = this;\r\n\r\n    while (current.parent instanceof Scope) {\r\n        current = current.parent;\r\n    }\r\n\r\n    return current;\r\n};\r\n\r\n/**\r\n * returns immediate child-scope \"name\" of \"scope\"\r\n */\r\nScope.prototype.get = function(name) {\r\n\r\n    if (this.has_children()) {\r\n\r\n        for (var id in this.children) {\r\n\r\n            var child = this.children[id];\r\n\r\n            if (child.name == name) {\r\n                return child;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * check if name is known to current scope or any parent scopes to which ascension is allowed\r\n *\r\n * @param string name first part of symbol\r\n * @return Scope? matching scope or null\r\n */\r\nScope.prototype.find_base = function(name) {\r\n\r\n    var current = this;\r\n    var previous = null;\r\n\r\n    // check if name exists in current scope, if not check parent. repeat until root or found.\r\n\r\n    do {\r\n\r\n        var child = current.get(name);\r\n\r\n        if (child instanceof Scope) {\r\n            return child;\r\n        }\r\n\r\n        assert(current != current.parent);\r\n\r\n        previous = current;\r\n        current = current.parent;\r\n\r\n    } while (current instanceof Scope && previous.allow_ascend);\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * find scope indicated by given symbol (if descending to the leaf is possible)\r\n *\r\n * @param string symbol symbol scope\r\n * @return Scope? matching scope or null\r\n */\r\nScope.prototype.find = function(symbol) {\r\n\r\n    var parts = symbol.split(\".\");\r\n\r\n    assert(parts != null);\r\n    assert(parts.length > 0);\r\n\r\n    // find base scope for symbol\r\n\r\n    var current = this.find_base(parts[0]);\r\n\r\n    // resolve symbol parts starting at base\r\n\r\n    for (var i = 1; i < parts.length && current instanceof Scope; i++) {\r\n\r\n        if (current.allow_descend != true) {\r\n            return null;\r\n        }\r\n\r\n        var child = current.get(parts[i]);\r\n\r\n        if (child == null) {\r\n            return null;\r\n        }\r\n\r\n        current = child;\r\n    }\r\n\r\n    return current;\r\n};\r\n\r\n/*\r\n * export\r\n */\r\nmodule.exports = Scope;","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n \r\n/**\r\n * Transform.UnresolvedSymbol constructor\r\n *\r\n * @param string name\r\n * @param string file\r\n * @param int line\r\n * @param int column\r\n */\r\nvar UnresolvedSymbol = function(name, file, line, column) {\r\n\r\n    this.name = name;\r\n    this.file = file;\r\n    this.line = line;\r\n    this.column = column;\r\n};\r\n\r\n/*\r\n * export\r\n */\r\nmodule.exports = UnresolvedSymbol;","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar util = require('./util');\r\nvar Cache = require('./cache');\r\n\r\nexport Scope = require('./transform/scope');\r\nexport UnresolvedSymbol = require('./transform/unresolved_symbol');\r\n\r\n/**\r\n * Base for language transformation file handling. Transforms a set of input\r\n * files into one or more output files using given options.\r\n *\r\n * @param String piped piped data, if any\r\n */\r\nmodule Transform = proto {\r\n\r\n    /**\r\n     * command line options handlers\r\n     */\r\n    optionsDefinition: null,\r\n\r\n    /**\r\n     * set command line options\r\n     */\r\n    options: null,\r\n\r\n    /**\r\n     * data received via stdin\r\n     */\r\n    piped: null,\r\n\r\n    /**\r\n     * output cache\r\n     */\r\n    cache: null,\r\n\r\n    /**\r\n     * constructor\r\n     *\r\n     * @param piped data received via stdin\r\n     */\r\n    constructor: function(piped) {\r\n\r\n        this.options    = { basePath: '', paths: [ ], files: [ ], outFile: null };\r\n        this.piped      = piped;\r\n        //this.rootScope          = null;\r\n        //this.unresolvedSymbols  = null;\r\n        //this.symbolPass         = 0;\r\n\r\n        this.initOptions();\r\n        this.processOptions();\r\n\r\n        if (this.options.nocache !== true) {\r\n            this.cache = new Cache();\r\n        }\r\n\r\n        if (this.options.debug) {\r\n            util.log.enable();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * initialize options definition, extend with own options\r\n     */\r\n    initOptions: function() {\r\n\r\n        this.defineOptions({\r\n            '_default': function(file) {\r\n                this['files'].push(file);\r\n            },\r\n            '_switch': function(param) {\r\n                this[param] = true;\r\n            },\r\n            'base': function(path) {\r\n                this['basePath'] = (path.hasPostfix('/') ? path : path + '/');\r\n            },\r\n            'path': function(path) {\r\n                if (this['paths'] === undefined) {\r\n                    this['paths'] = [];\r\n                }\r\n                this['paths'].push((path.hasPostfix('/') ? path : path + '/'));\r\n            },\r\n            'out': function(file) {\r\n                this['outFile'] = file;\r\n            },\r\n            'target': function(target) {\r\n                this['target'] = target;\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * adds a set of options to the command line options handler\r\n     *\r\n     * @param optionsDefinition object of handler functions\r\n     */\r\n    defineOptions: function(optionsDefinition) {\r\n\r\n        if (this.optionsDefinition === null) {\r\n            this.optionsDefinition = { };\r\n        }\r\n\r\n        for (var id in optionsDefinition) {\r\n            this.optionsDefinition[id] = optionsDefinition[id];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * processes options definition into options\r\n     */\r\n    processOptions: function() {\r\n        util.processOptions(this.options, this.optionsDefinition);\r\n    },\r\n\r\n    /**\r\n     * entry point, run transformation\r\n     */\r\n    run: function() { },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * contains generator as well as its current result\r\n * used to simplify handling of the Node::filter generator\r\n */\r\nmodule GeneratorState = proto {\r\n\r\n    /**\r\n     * references the generator object\r\n     */\r\n    generator: null,\r\n\r\n    /**\r\n     * references the current result node\r\n     */\r\n    node: null,\r\n\r\n    /**\r\n     * references the current stack\r\n     */\r\n    stack: null,\r\n\r\n    /**\r\n     * references the token for this state\r\n     */\r\n    token: null,\r\n\r\n    /**\r\n     * minimum stacksize encountered during recursive return-node processing.\r\n     * this information is required to construct a capture tree.\r\n     * i.e.: the stacks of two consecutive generators might look like this:\r\n     *\r\n     *      root->statement\r\n     *      root->statement\r\n     *\r\n     * which would be interpreted as one single \"statement\" spanning two tokens during capture tree generation.\r\n     * but with the second token generator indicating a minStack size of 1, we can deduce that at some point between the tokens,\r\n     * the stack only contained root, so an intermediate third stack can be calculated to give a complete picture:\r\n     *\r\n     *      root->statement\r\n     *      root\r\n     *      root->statement\r\n     *\r\n     * the capture tree generator can convert this to two independent statement nodes.\r\n     */\r\n    minStack: 0,\r\n\r\n    /**\r\n     * true once the generator has no more data to yield\r\n     */\r\n    done: false,\r\n\r\n    /**\r\n     * sets the generator object for this GeneratorState\r\n     *\r\n     * @param object generator\r\n     * @param string token\r\n     */\r\n    setGenerator: function(generator, token) {\r\n\r\n        this.generator = generator;\r\n        this.token = token;\r\n        this.node = null;\r\n        this.stack = null;\r\n        this.minStack = 0;\r\n        this.done = false;\r\n    },\r\n\r\n    /**\r\n     * fetches next result from generator and makes it accessible via the node, stack and minStack\r\n     * properties. if there are no futher results, the done property will be set to true\r\n     */\r\n    next: function() {\r\n\r\n        var state = this.generator.next();\r\n\r\n        if (state.done === false) {\r\n            this.node = state.value.node;\r\n            this.stack = state.value.stack;\r\n            this.minStack = state.value.minStack;\r\n        } else {\r\n            this.node = null;\r\n            this.stack = null;\r\n            this.minStack = 0;\r\n        }\r\n\r\n        this.done = state.done;\r\n        return this;\r\n    },\r\n\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nvar Enum = require('../../util').Enum;\r\n\r\nexport Type = Enum([ 'NONE', 'BLOCK', 'JUMP', 'RETURN' ]);\r\n\r\nexport StackItem = proto {\r\n    node: null,\r\n    token: null,\r\n    constructor: function(node, token) {\r\n        this.node = node;\r\n        this.token = token;\r\n    },\r\n};\r\n\r\n/**\r\n * Parser.Definition.Node constructor\r\n *\r\n * creates a new node for use in a definition block\r\n */\r\nmodule Node = proto {\r\n\r\n    children: null,\r\n    tokenType: 0,\r\n    match: '',\r\n    type: 0,\r\n    name: '',\r\n    capture: '',\r\n    label: '',\r\n    description: '',\r\n\r\n    constructor: function() {\r\n        this.children = [ ];\r\n    },\r\n\r\n    hasChild: function(node) {\r\n\r\n        var children = this.children;\r\n\r\n        for (var id in children) {\r\n\r\n            if (children[id] === node) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * adds a node to the list of childnodes, ensuring that the exit node is always last\r\n     *\r\n     * @param node a definition node\r\n     */\r\n    add: function(node) {\r\n\r\n        assert(node instanceof Node);\r\n\r\nif (this.hasChild(node)) { return; } //!todo shouldn't be required\r\n\r\n        var children = this.children;\r\n\r\n        if (node.type & Type.RETURN) {\r\n\r\n            // return-nodes need to be last because entry -> exit always matches, so no other child would be considered after exit\r\n\r\n            children.push(node);\r\n            return node;\r\n\r\n        } else {\r\n\r\n            // normal nodes are to be added at the end - unless the last node is an exit node\r\n\r\n            var lastId = children.length -1;\r\n\r\n            if (lastId >= 0) {\r\n\r\n                var lastChild = children[lastId];\r\n\r\n                // if the last node is a return node, insert new node just before the return node\r\n\r\n                if (lastChild.type & Type.RETURN) {\r\n\r\n                    children[lastId] = node;\r\n                    children.push(lastChild);\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n\r\n        // no exit node as direct child found, just append to the list\r\n\r\n        children.push(node);\r\n\r\n        return node;\r\n    },\r\n\r\n    /**\r\n     * creates a node and adds it to the end of the child nodes\r\n     *\r\n     * @param Tokenizer.Token.Type tokenType required to achive match\r\n     * @param string match regex\r\n     * @param string capture name to log capture under\r\n     * @param string description text to use during error generation\r\n     * @return Parser.Definition.Node the new node\r\n     */\r\n    createAndAdd: function(tokenType, match, capture, description) {\r\n\r\n        var node = new Node();\r\n        node.capture        = capture;\r\n        node.tokenType      = tokenType;\r\n        node.match          = match;\r\n        node.description    = (description !== undefined ? description : (capture !== undefined ? capture : match));\r\n\r\n        return this.add(node);\r\n    },\r\n\r\n    /**\r\n     * tests if the node matches given token directly\r\n     *\r\n     * @param token\r\n     * @return boolean\r\n     */\r\n    matches: function(token) {\r\n\r\n        // types have to overlap\r\n\r\n        if ((token.type & this.tokenType) === 0) {\r\n            return false;\r\n        }\r\n\r\n        // compare the string or regex match\r\n\r\n        if (this.match === '') {\r\n            return true;\r\n        } else if (typeof this.match === 'string') {\r\n            return token.data === this.match;\r\n        } else {\r\n            return this.match.test(token.data);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * returns true if the current node can directly reach the root\r\n     * exit without having to match any more tokens\r\n     *\r\n     * @param stack current stack\r\n     */\r\n    reachesExit: function(stack) {\r\n\r\n        var children = this.children;\r\n        var lastChild = children.length -1;\r\n\r\n        // exit nodes always come last, so just look if the last node is an exit node\r\n\r\n        if (children[lastChild].type === Type.RETURN) {\r\n\r\n            if (stack.length === 0) {\r\n                return true;\r\n            } else {\r\n                return stack[stack.length -1].node.reachesExit(stack.slice(0, -1));\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * yields matches for given token recusively from node children\r\n     *\r\n     * @param token to match\r\n     */\r\n    filter: function*(parser, token, stack) {\r\n\r\n        var children = this.children;\r\n        var child, blockRoot, generator, result;\r\n\r\n        if (stack.length > 500) {\r\n            var message = parser.errorMessage(token, this, stack);\r\n            throw new Error('recursion too deep. last error:\\n' + message);\r\n        }\r\n\r\n        for (var id = 0, len = children.length; id < len; id++) {\r\n\r\n            child = children[id];\r\n\r\n            if (child.type === Type.JUMP) {\r\n\r\n                // if this is a conditional jump, check if condition is met\r\n\r\n                if (child.condition !== '' && parser.checkCondition(child.condition, stack) === false) {\r\n                    continue;\r\n                }\r\n\r\n                // push current child onto stack before recursing into another block and forward-yield its matches\r\n\r\n                blockRoot = parser.definition.getBlock(child.match);\r\n                generator = blockRoot.filter(parser, token, stack.concat(new StackItem(child, token)));\r\n\r\n                while ((result = generator.next()).done === false) {\r\n                    yield result.value;\r\n                }\r\n\r\n            } else if (child.type === Type.RETURN) {\r\n\r\n                // there was an error, nothing to yield\r\n\r\n                if (stack.length === 0) {\r\n                    throw new Error('nothing to yield');\r\n                }\r\n\r\n                // return to previous node on stack\r\n\r\n                var top = stack[stack.length -1].node;\r\n                generator = top.filter(parser, token, stack.slice(0, -1));\r\n\r\n                while ((result = generator.next()).done === false) {\r\n                    result.value.minStack = Math.min(result.value.minStack, stack.length -1);\r\n                    yield result.value;\r\n                }\r\n\r\n            } else if (child.matches(token)) {\r\n\r\n                // yield direct match\r\n\r\n                yield { node: child, stack: stack, minStack: stack.length };\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * returns expected tokens for this node and its children\r\n     *\r\n     * @param Parser owner the parser this node belongs to. used for definition lookups\r\n     * @param HashSet<string>? known @internal, if specified function returns empty string and fills known with expected tokens\r\n     * @return string comma-separated list of expected tokens\r\n     */\r\n    toString: function(owner, known) {\r\n\r\n        var data;\r\n\r\n        if (known === undefined) {\r\n            data = { };\r\n        } else {\r\n            data = known;\r\n        }\r\n\r\n        for (var childId in this.children) {\r\n\r\n            var child = this.children[childId];\r\n\r\n            if ((child.type & Type.RETURN) === 0) {\r\n\r\n                if (child.type === Type.JUMP && owner !== undefined) {\r\n                    try {\r\n                        owner.definition.getBlock(child.match).toString(owner, data);\r\n                    } catch (e) { }\r\n                } else {\r\n                    data[child.description != \"\" ? child.description : (child.capture != \"\" ? child.capture : \"\\\"\" + child.match + \"\\\"\")] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // skip result if not root call\r\n\r\n        if (known !== undefined) {\r\n            return \"\";\r\n        }\r\n\r\n        // original call, generate result string from gathered data\r\n\r\n        var result = this.type === Type.JUMP ? '[' + this.match + '] ' : '';\r\n\r\n        for (var item in data) {\r\n\r\n            if (result != \"\") {\r\n                result += \", \";\r\n            }\r\n\r\n            result += item;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nexport Node = require('./definition/node');\r\n\r\n/**\r\n * Parser.Definition\r\n *\r\n * holds blocks of trees representing the source language syntax structure\r\n */\r\nmodule Definition = proto {\r\n\r\n    /**\r\n     * constructs new parser-definition\r\n     *\r\n     * @param initialBlock name of the entry block or syntax root\r\n     */\r\n    constructor: function(initialBlock) {\r\n\r\n        this.blockRoot =  { };\r\n        this.initialBlock = (initialBlock === undefined ? 'root' : initialBlock);\r\n    },\r\n\r\n    /**\r\n     * creates a definition block root node\r\n     *\r\n     * @param string name block name\r\n     * @param Node rootNode the definition node to use as root\r\n     */\r\n    createBlock: function(name, rootNode) {\r\n\r\n        name = (name === null ? this.initialBlock : name);\r\n\r\n        // store block name and capture in root node\r\n\r\n        rootNode.match = 'block_' + name;\r\n        this.blockRoot[name] = rootNode;\r\n        return rootNode;\r\n    },\r\n\r\n    /**\r\n     * check whether a block exists\r\n     *\r\n     * @param string name the block name\r\n     * @return bool exists\r\n     */\r\n    haveBlock: function(name) {\r\n        return (this.blockRoot[name] !== undefined);\r\n    },\r\n\r\n    /**\r\n     * returns the root node of a definition block\r\n     *\r\n     * @param string name name of the block of which to retrieve the root node\r\n     * @return Node root node\r\n     */\r\n    getBlock: function(name) {\r\n\r\n        var node = this.blockRoot[name];\r\n\r\n        if (node === undefined) {\r\n            throw new Error('referencing non-existing definition block ' + name);\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    /**\r\n     * returns the root node of the initial definition block\r\n     *\r\n     * @return Node root node\r\n     */\r\n    getInitialBlock: function() {\r\n\r\n        return this.getBlock(this.initialBlock);\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\n *\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar path = require('path');\nvar XRegExp = require('./xregexp');\nvar util = require('./util');\nvar GeneratorState = require('./parser/generator_state');\n\nexport Definition = require('./parser/definition');\n\n/**\n * Abstract parser. The parser uses groups of trees of match-nodes. During parsing, input tokens are tested\n * against the node tree. If a token matches, the following token has to be matched by a child of the current node.\n * This continues until a leaf is reached (in which case the token sequence is valid) or until a token does not match\n * any child, in which case processing continues with the remaining children of the current node-parent recursively\n * going down the tree.\n */\nmodule Parser = proto {\n\n    /**\n     * the definition for the input language\n     */\n    definition: null,\n\n    /**\n     * a language-specific tokenizer instance\n     */\n    tokenizer: null,\n\n    /**\n     * name of the file being processed, for informational purposes only\n     */\n    file: 'unnamed',\n\n    /**\n     * construct parser and set up new definition\n     */\n    constructor: function() {\n        this.definition = new Definition('root');\n    },\n\n    /**\n     * constructs new instance referencing source's definition\n     */\n    clone: function() {\n\n        var OwnType = Object.getPrototypeOf(this).constructor;\n        var parser = new OwnType();\n\n        assert(parser instanceof Parser);\n\n        parser.definition = this.definition;\n        parser.tokenizer = this.tokenizer;\n\n        return parser;\n    },\n\n    /**\n     * returns an error message based on current token, node and state of the stack\n     *\n     * @param token token where the error occured\n     * @param node last node to actually match the token\n     * @param stack stack at the time of the match\n     * @return string error\n     */\n    errorMessage: function(token, node, stack) {\n\n        // for output simplicy, add current node to stack\n\n        stack = stack.slice();\n        stack.push({ node: node, token: token });\n\n        // stacktrace (debugging)\n\n        var id = stack.length -1;\n        var trace = '';\n        var done = 0;\n        var levelNode, levelToken;\n\n        while (id--) {\n            levelNode = stack[id].node;\n            levelToken = stack[id].token;\n\n            if (levelNode instanceof Object) {\n                trace += (id + 1) + '. ' + levelNode.name + (levelNode.capture !== '' ? ':' + levelNode.capture : '') + (levelNode.label !== '' ? '[' + levelNode.label + ']' : '');\n            } else {\n                trace += 'null entry on stack';\n            }\n\n            trace += ' at ' + levelToken.pos.toString() + ': ' + levelToken.data + '\\n';\n\n            // if after 15 items there are still more than 15 items on the stack, skip ahead to item 15\n\n            if (done++ > 15 && id > 15) {\n                id = 15;\n                trace += '...\\n';\n            }\n        }\n\n        return '$file: Unexpected token \"$tokenData\" $position. Expected: $validNodes\\n\\nTrace:\\n$trace'.format({\n            file        : path.normalize(this.file),\n            tokenData   : token.data,\n            position    : token.pos.toString(),\n            validNodes  : node.toString(this),\n            trace       : trace\n        });\n    },\n\n    /**\n     * override to implement node match condition checking\n     *\n     * @param condition string\n     * @param stack current node stack\n     */\n    checkCondition: function(condition, stack) {\n\n        throw Error('NYI: parser::checkCondition');\n    },\n\n    /**\n     * process language string according to given definition\n     *\n     * @param string source input string to process\n     */\n    parse: function(source) {\n\n        // create tokens from input string\n\n        util.log('Parser', 'tokenizing', 2);\n        var tokens = this.tokenizer.process(source, this.file);\n        util.log('Parser', 'done', -2);\n\n        var node = this.definition.getInitialBlock();\n        var stack = [];\n        var len = tokens.length;\n        var id = len;\n        var maxId = 0;\n        var maxStack = [];\n        var maxNode = node;\n        var results = new Array(len);\n        var success = false;\n        var result, token;\n\n        // create a GeneratorState for each token\n\n        while (id--) {\n            results[id] = new GeneratorState();\n        }\n\n        id = 0;\n\n        // process tokens\n\n        util.log('Parser', 'processing ' + len + ' tokens according to currrent language definition');\n\n        do {\n\n            result = results[id];\n\n            // on first token visit, generate matching nodes\n\n            if (result.generator === null) {\n                token = tokens.get(id);\n                result.setGenerator(node.filter(this, token, stack), token);\n            }\n\n            // check for matches and store current matching node in result.node\n\n            try {\n                result.next();\n            } catch (e) {\n                if (e.message === 'nothing to yield') {\n                    break;\n                } else {\n                    throw e;\n                }\n            }\n\n            // remember deepest positive match for error reporting\n\n            if (result.done === false && id > maxId) {\n                maxId = id;\n                maxStack = result.stack.slice(0);\n                maxNode = result.node;\n            }\n\n            if (result.done) {\n\n                // no more matches, discard this generator and go back one token\n\n                result.setGenerator(null);\n                id--;\n\n            } else if (id === len -1) {\n\n                // last token, cannot advance further, either reach exit or try next match for same token\n\n                if (result.node.reachesExit(result.stack)) {\n                    success = true;\n                    break;\n                } else {\n                    continue;\n                }\n\n            } else {\n\n                // a(nother) match was found, update node and go to next token\n\n                node = result.node;\n                stack = result.stack.slice(0);\n                id++;\n            }\n\n        } while (id >= 0);\n\n        // check result\n\n        if (success === false) {\n            if (maxId +1 === len) {\n                throw new Error(path.normalize(this.file) + ': Unexpected end of file.');\n            } else {\n                throw new Error(this.errorMessage(tokens.get(maxId +1), maxNode, maxStack));\n            }\n        }\n\n        return results;\n    },\n\n};\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nvar Position = proto {\r\n\r\n    col: 0,\r\n    row: 0,\r\n\r\n    constructor: function(col, row) {\r\n        this.col = col;\r\n        this.row = row;\r\n    },\r\n\r\n    toString: function() {\r\n        return 'line ' + this.row + ', column ' + this.col;\r\n    },\r\n};\r\n\r\nvar Token = proto {\r\n\r\n    data: '',\r\n    type: 0,\r\n    start: 0,\r\n    pos: null,\r\n\r\n    constructor: function(data, type, start, col, row) {\r\n\r\n        this.data = data;\r\n        this.type = type;\r\n        this.start = start;\r\n        this.pos = new Position(col, row);\r\n    },\r\n};\r\n\r\nmodule Result = proto {\r\n\r\n    constructor: function(tokenizer) {\r\n        this.tokenizer = tokenizer;\r\n        this.tokens = [ ];\r\n    },\r\n\r\n    /**\r\n     * add a token to the result\r\n     *\r\n     * @param data the matched string\r\n     * @param type token type id from Type Enum\r\n     * @param start absolute startposition in the source string\r\n     * @param col calculated column\r\n     * @param row calculated row\r\n     */\r\n    add: function(data, type, start, col, row) {\r\n        this.tokens.push(new Token(data, type, start, col, row));\r\n    },\r\n\r\n    /**\r\n     * retrieve a token from the result\r\n     *\r\n     * @param id token id to retrieve\r\n     * @return token object or undefined\r\n     */\r\n    get: function(tokenId) {\r\n        return this.tokens[tokenId];\r\n    },\r\n\r\n    /*length: function() {\r\n        return this.tokens.length;\r\n    },*/\r\n\r\n    /**\r\n     * return number of tokens in result\r\n     */\r\n    length: property {\r\n        get: function() {\r\n            return this.tokens.length;\r\n        }\r\n    },\r\n\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar XRegExp = require('./xregexp');\r\nvar Enum    = require('./util').Enum;\r\n\r\nexport Result = require('./tokenizer/result');\r\n\r\n/**\r\n * Splits strings into configurable types of tokens\r\n *\r\n * @param definition array of parser functions to use for token identification\r\n * @param extra array of additional token types to register with Type enum\r\n */\r\nmodule Tokenizer = proto {\r\n\r\n    /**\r\n     * constructor\r\n     *\r\n     * @param definition array of parser functions to use for token identification\r\n     * @param extra array of additional token types to register with Type enum\r\n     */\r\n    constructor: function(definition, extra) {\r\n\r\n        this.definition = definition;\r\n\r\n        // build type legend\r\n\r\n        var legend = [];\r\n\r\n        for (var id in definition) {\r\n            legend.push(definition[id].name);\r\n        }\r\n\r\n        if (extra instanceof Array) {\r\n            for (var id in extra) {\r\n                legend.push(extra);\r\n            }\r\n        }\r\n\r\n        this.Type = Enum(legend);\r\n    },\r\n\r\n    /**\r\n     * process a string to an array of tokens\r\n     *\r\n     * @param data input string\r\n     * @param filename used in error output\r\n     * @return array of tokens\r\n     */\r\n    process: function(data, filename = 'unnamed') {\r\n\r\n        var startPos = 0;\r\n        var result = new Result(this);\r\n        var col = 1;\r\n        var row = 1;\r\n        var definition = this.definition;\r\n        var match, found;\r\n\r\n        // tokenize string\r\n\r\n        while (startPos < data.length) {\r\n\r\n            found = false;\r\n\r\n            // try each parser until one matches\r\n\r\n            for (var id, processor in this.definition) {\r\n\r\n                match = processor.func(data, startPos);\r\n\r\n                if (match !== null) {\r\n\r\n                    if (match.data !== null && match.name !== null) {\r\n                        result.add(match.data, this.Type[match.name], startPos, col, row);\r\n                    }\r\n\r\n                    row += match.containedRows;\r\n                    col = (match.containedRows === 0 ? col + match.lastRowLen : match.lastRowLen + 1);\r\n                    found = true;\r\n                    startPos += match.data.length;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // none of the parsers were able to match the next token, error out\r\n\r\n            if (found !== true) {\r\n                throw new Error(filename + ': no match found at row ' + row + ', column ' + col + ': \"' + data.substr(startPos).split(/\\r?\\n/)[0] + '\"');\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\n/**\r\n * represents a single token match\r\n */\r\nfunction Match(name, data, endPosition, containedRows, lastRowLen) {\r\n    this.name = name;\r\n    this.data = data;\r\n    this.endPosition = endPosition;\r\n    this.containedRows = containedRows;\r\n    this.lastRowLen = lastRowLen;\r\n}\r\n\r\n/*\r\n * predefined tokenizer functions\r\n */\r\nTokenizer.prefab = new (function() {\r\n    var regexFunc = function(name, regex, callback) {\r\n        return {\r\n            name: name,\r\n            func: function(data, start) {\r\n                var result = regex.exec(data.substr(start)); // XRegExp.exec(data, regex, start, 'sticky');\r\n\r\n                if (result !== null) {\r\n                    var rows = result[0].occurances('\\n');\r\n                    var lastBreak = result[0].lastIndexOf('\\n');\r\n                    var lastRowLen = result[0].length - (lastBreak + 1);\r\n\r\n                    var match = new Match(this.name, result[0], start + result[0].length, rows, lastRowLen);\r\n\r\n                    if (typeof callback === 'function') {\r\n                        return callback(match);\r\n                    } else {\r\n                        return match;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        };\r\n    };\r\n\r\n    var regexEscape = function(regexString) {\r\n        return XRegExp.escape(regexString).replace('/', '\\\\/');\r\n    };\r\n\r\n    this.breaker = function() {\r\n        return regexFunc(null, /^(\\s+)/);\r\n    };\r\n\r\n    this.number = function(name) {\r\n        return regexFunc(name, /^(\\-?[0-9]+(\\.[0-9]+)?(e\\-?[0-9]+)?)/);\r\n    };\r\n\r\n    this.delimited = function(name, start, end) {\r\n\r\n        start   = start || '\"';\r\n        end     = end || start;\r\n\r\n        var regex = new RegExp('^(' + regexEscape(start) + '[\\\\s\\\\S]*?' + regexEscape(end) + ')');\r\n        return regexFunc(name, regex);\r\n    };\r\n\r\n    this.regex = function(name, regex, callback) {\r\n\r\n        return regexFunc(name, regex, callback);\r\n    };\r\n\r\n    var excludeFunc = function(match) {\r\n\r\n        if (this.indexOf(match.data) !== -1) {\r\n            return null;\r\n        }\r\n\r\n        return match;\r\n    };\r\n\r\n    this.exclude = function(name, regex, exclude) {\r\n\r\n        return regexFunc(name, regex, excludeFunc.bind(exclude));\r\n    };\r\n\r\n    this.set = function(name, matches) {\r\n\r\n        var escaped = [ ];\r\n\r\n        for (var id in matches) {\r\n            escaped.push(regexEscape(matches[id]));\r\n        }\r\n\r\n        var regex = new RegExp('^(' + escaped.join('|') + ')');\r\n\r\n        return regexFunc(name, regex);\r\n    };\r\n\r\n    this.group = function(name, matches) {\r\n\r\n        var escaped = [ ];\r\n\r\n        for (var id in matches) {\r\n            escaped.push(regexEscape(matches[id]));\r\n        }\r\n\r\n        var regex = new RegExp('^(' + '[' + escaped.join() + ']+)');\r\n\r\n        return regexFunc(name, regex);\r\n    };\r\n\r\n    this.any = function(name) {\r\n        return regexFunc(name, /^[^\\s]*/);\r\n    };\r\n\r\n})();\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * a single path connecting two nodes within a block in a parser definition file\r\n * note: LanguageParser::createNode and integrateNodePair are called to convert lists\r\n * of pairs into connected groups of node trees represented by Parser.Definition\r\n */\r\nmodule Path = proto {\r\n\r\n    source: null,\r\n    target: null,\r\n\r\n    constructor: function(sourceName, sourceCapture, sourceLabel, sourceCondition, targetName, targetCapture, targetLabel, targetCondition) {\r\n\r\n        this.source = new PathElement(sourceName, sourceCapture, sourceLabel, sourceCondition);\r\n        this.target = new PathElement(targetName, targetCapture, targetLabel, targetCondition);\r\n    },\r\n\r\n    reset: function() {\r\n\r\n        this.source = this.target;\r\n        this.target = new PathElement();\r\n    },\r\n\r\n    clone: function() {\r\n\r\n        return new Path(\r\n            this.source.name, this.source.capture, this.source.label, this.source.condition,\r\n            this.target.name, this.target.capture, this.target.label, this.target.condition\r\n        );\r\n    },\r\n\r\n};\r\n\r\nvar PathElement = proto {\r\n\r\n    name        : '',\r\n    capture     : '',\r\n    label       : '',\r\n    condition   : '',\r\n\r\n    constructor: function(name = '', capture = '', label = '', condition = '') {\r\n        this.name = name;\r\n        this.capture = capture;\r\n        this.label = label;\r\n        this.condition = condition;\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nvar XRegExp = require('./xregexp');\r\nvar util = require('./util');\r\nvar Parser = require('./parser');\r\nvar Tokenizer = require('./tokenizer');\r\nvar Path = require('./definition_parser/path');\r\n\r\n/**\r\n * Parser subclass hardwired with the required node tree to process the syntax of .sdt-files.\r\n * Provides trainOther() method to train another parser according to input .sdt-file using\r\n * the other parser's createNode and integrateNodePair methods\r\n */\r\nmodule DefinitionParser = proto (Parser) {\r\n\r\n    constructor: function() {\r\n\r\n        Parser->constructor();\r\n\r\n        this.tokenizer = new Tokenizer([\r\n            Tokenizer.prefab.delimited(null, '/*', '*/'),\r\n            Tokenizer.prefab.regex(null, /^\\/\\/.*/),\r\n            Tokenizer.prefab.breaker(),\r\n            Tokenizer.prefab.regex('WORD', /^[a-z_]+/i),\r\n            Tokenizer.prefab.set('DELIM', [ '->', '.', ':', '[', ']', '{', '}', '?' ]),\r\n            Tokenizer.prefab.regex('STRING', /^([\"'])(?:(?=(\\\\?))\\2[\\s\\S])*?\\1/),\r\n            Tokenizer.prefab.number('NUMERIC'),\r\n        ]);\r\n\r\n        // create a definition for the parser definition language\r\n\r\n        this.trainSelf();\r\n\r\n        // during processing lists (blocks) of node pairs (paths) are required\r\n\r\n        this.pathBlocks = { };\r\n\r\n        // a temporary used to analyze the current path ( a -> b )\r\n\r\n        this.currentPath = new Path();\r\n    },\r\n\r\n    /**\r\n     * callback called by Parser.parse() for all capturepoints found in a valid path\r\n     *\r\n     * @param string name capture name\r\n     * @param string value captured value\r\n     */\r\n    capture: function(name, value) {\r\n\r\n        var currentPath = this.currentPath;\r\n\r\n        // block starting subdefinition\r\n\r\n        if (name == 'block_name') {\r\n\r\n            this.block_name = value;\r\n            this.pathBlocks[this.block_name] = [ ];\r\n            return;\r\n        }\r\n\r\n        // construct path pairs from complete paths (i.e. a->b->c becomes a->b, b->c) [from previous capture]\r\n\r\n        if ((name == 'path' || name == 'source_name' || name == 'block_done') && currentPath.source.name != '' && currentPath.target.name != '') {\r\n\r\n            // append new path to current block, then reset it (move target to source, clear target)\r\n\r\n            this.pathBlocks[this.block_name].push(currentPath.clone());\r\n            currentPath.reset();\r\n        }\r\n\r\n        // process current source/target. make sure the capture/label is reset when encountering a 'name'\r\n\r\n        if (name == 'source_name') {\r\n\r\n            currentPath.source.name       = value;\r\n            currentPath.source.capture    = '';\r\n            currentPath.source.label      = '';\r\n            currentPath.source.condition  = '';\r\n\r\n        } else if (name == 'target_name') {\r\n\r\n            currentPath.target.name       = value;\r\n            currentPath.target.capture    = '';\r\n            currentPath.target.label      = '';\r\n            currentPath.target.condition  = '';\r\n\r\n        } else if (name == 'source_capture') {\r\n\r\n            currentPath.source.capture    = value;\r\n\r\n        } else if (name == 'target_capture') {\r\n\r\n            currentPath.target.capture    = value;\r\n\r\n        } else if (name == 'source_label') {\r\n\r\n            currentPath.source.label      = value;\r\n\r\n        } else if (name == 'target_label') {\r\n\r\n            currentPath.target.label      = value;\r\n\r\n        } else if (name == 'source_condition') {\r\n\r\n            currentPath.source.condition  = value.slice(1, -1);\r\n\r\n        } else if (name == 'target_condition') {\r\n\r\n            currentPath.target.condition  = value.slice(1, -1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * parse file and use callback on captures\r\n     */\r\n    parse: function(source) {\r\n\r\n        // call parent\r\n\r\n        var results = Parser.prototype.parse.call(this, source);\r\n\r\n        for (var id, result in results) {\r\n\r\n            if (result.node.capture != '') {\r\n                this.capture(result.node.capture, result.token.data);\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    /**\r\n     * process loaded .sdt using node_creator and node_pair_integrator callbacks from the target parser\r\n     * effectively, this trains the target parser with a language definition\r\n     */\r\n    trainOther: function(parser) {\r\n\r\n        var parts = [ 'source', 'target' ];\r\n\r\n        // for each path group generated by the capture callback\r\n\r\n        for (var block_name, block_paths in this.pathBlocks) {\r\n\r\n            var node_map    = { };\r\n            var node_pair   = [ ];\r\n\r\n            // for each path (in each group)\r\n\r\n            for (var id, path in block_paths) {\r\n\r\n                // try to insert both source and target node\r\n\r\n                for (var i, part in parts) {\r\n\r\n                    var hash = path[part].name + ':' + path[part].capture + ':' + path[part].label;\r\n\r\n                    // only insert if node not already known\r\n\r\n                    node_pair[i] = node_map[hash];\r\n\r\n                    if (node_pair[i] === undefined) {\r\n\r\n                        // use userdefined mapping to create the node\r\n\r\n                        var node = parser.createNode(path[part].name, path[part].capture, path[part].label, path[part].condition);\r\n\r\n                        // remember node as known and insert it into the pair\r\n\r\n                        node_map[hash] = node;\r\n                        node_pair[i] = node;\r\n                    }\r\n                }\r\n\r\n                // user defined node-integrator\r\n\r\n                parser.integrateNodePair(node_pair, block_name);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * prepare definition of this parser for .sdt-file parsing\r\n     */\r\n    trainSelf: function() {\r\n\r\n        var Type = this.tokenizer.Type;\r\n        var block_root = new Parser.Definition.Node();\r\n        this.definition.createBlock(null, block_root);\r\n\r\n        // entry point is an identifier\r\n\r\n        var blockname = block_root.createAndAdd(Type.WORD, XRegExp('.+', 's'), 'block_name');\r\n        var body = blockname.createAndAdd(Type.DELIM, '{', '', '{');\r\n\r\n        // inside the body, an identifier 'source_name' is expected first (with optional secondary identifier\r\n        // 'source_capture' and optional 'source_label')\r\n\r\n        var node1a = body.createAndAdd(Type.WORD | Type.STRING, XRegExp('.+', 's'), 'source_name');\r\n        var node1b = node1a.createAndAdd(Type.DELIM, ':', '', ':');\r\n        var node1c = node1b.createAndAdd(Type.WORD, XRegExp('.+', 's'), 'source_capture');\r\n        var node1d = node1c.createAndAdd(Type.DELIM, '[', '', '[');\r\n        var node1e = node1d.createAndAdd(Type.WORD, XRegExp('.+', 's'), 'source_label');\r\n        var node1f = node1e.createAndAdd(Type.DELIM, ']', '', ']');\r\n        var node1g = node1f.createAndAdd(Type.DELIM, '?', '', '?');\r\n        var node1h = node1g.createAndAdd(Type.STRING, XRegExp('.+', 's'), 'source_condition');\r\n        node1a.add(node1d); // name[label]\r\n        node1a.add(node1g); // name?condition\r\n        node1c.add(node1g); // name[label]?condition\r\n\r\n        // the connector symbol '->', attach to source_name, source_capture, source_label and source_condition\r\n\r\n        var path1a = node1a.createAndAdd(Type.DELIM, '->', 'path', '->');\r\n        node1h.add(path1a);\r\n        node1f.add(path1a);\r\n        node1c.add(path1a);\r\n\r\n        // at least one path to another identifier has to be defined\r\n\r\n        var node2a = path1a.createAndAdd(Type.WORD | Type.STRING, XRegExp('.+', 's'), 'target_name');\r\n        var node2b = node2a.createAndAdd(Type.DELIM, ':', '', ':');\r\n        var node2c = node2b.createAndAdd(Type.WORD, XRegExp('.+', 's'), 'target_capture');\r\n        var node2d = node2c.createAndAdd(Type.DELIM, '[', '', '[');\r\n        var node2e = node2d.createAndAdd(Type.WORD, XRegExp('.+', 's'), 'target_label');\r\n        var node2f = node2e.createAndAdd(Type.DELIM, ']', '', ']');\r\n        var node2g = node2f.createAndAdd(Type.DELIM, '?', '', '?');\r\n        var node2h = node2g.createAndAdd(Type.STRING, XRegExp('.+', 's'), 'target_condition');\r\n        node2a.add(node2d); // name[label]\r\n        node2a.add(node2g); // name?condition\r\n        node2c.add(node2g); // name[label]?condition\r\n\r\n        // followed by the continuation of this path (capture moves last target to source)\r\n\r\n        node2h.add(path1a);\r\n        node2f.add(path1a);\r\n        node2c.add(path1a);\r\n        node2a.add(path1a);\r\n\r\n        // ... or another identifier to start a new path ...\r\n\r\n        node2h.add(node1a);\r\n        node2f.add(node1a);\r\n        node2c.add(node1a);\r\n        node2a.add(node1a);\r\n\r\n        // ... or the end of this body\r\n\r\n        var bodyend = node2c.createAndAdd(Type.DELIM, '}', 'block_done', '}');\r\n        node2a.add(bodyend);\r\n        node2f.add(bodyend);\r\n        node2h.add(bodyend);\r\n\r\n        // or another block\r\n\r\n        bodyend.add(blockname);\r\n\r\n        // followed by the end of the document (only the nodetype is considered, set match to dummy)\r\n\r\n        var exit = bodyend.createAndAdd(Type.WORD, 'exit');\r\n        exit.type = Parser.Definition.Node.Type.RETURN;\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nvar SourceNode = require('source-map').SourceNode;\r\nvar Template = require('../template');\r\n\r\n/**\r\n * An abstract syntax node generated by CaptureNode::fromResults()\r\n */\r\nmodule CaptureNode = proto {\r\n\r\n    parent: null,\r\n    children: null,\r\n    key: '',\r\n    value: '',\r\n    tpl: null,\r\n    row: 0,\r\n    col: 0,\r\n\r\n    /**\r\n     * construct new capture node for given key/value\r\n     *\r\n     * @param key\r\n     * @param value\r\n     */\r\n    constructor: function(key, value) {\r\n        this.key    = key;\r\n        this.value  = value;\r\n    },\r\n\r\n    /**\r\n     * convert to JSON, loses parent\r\n     */\r\n    toJSON: function() {\r\n\r\n        // recursively include all children\r\n\r\n        var children = [];\r\n\r\n        for (var id in this.children) {\r\n            children.push(this.children[id].toJSON());\r\n        }\r\n\r\n        // try to keep it small\r\n\r\n        return {\r\n            _: this.constructor.name,\r\n            s: children,\r\n            k: this.key,\r\n            v: this.value,\r\n            t: this.tpl,\r\n            r: this.row,\r\n            c: this.col\r\n        };\r\n    },\r\n\r\n    /**\r\n     * static, create from JSON, restores parent\r\n     */\r\n    fromJSON: function(json, parent, typeMapper) {\r\n\r\n        var Type = typeMapper(null, json._);\r\n\r\n        var result = new Type(json.k, json.v);\r\n        result.parent = parent;\r\n        result.tpl = json.t;\r\n        result.row = json.r;\r\n        result.col = json.c;\r\n        result.children = [ ];\r\n\r\n        var jsonChildren = json.s;\r\n        var resultChildren = result.children;\r\n\r\n        for (var id in jsonChildren) {\r\n            resultChildren.push(CaptureNode::fromJSON(jsonChildren[id], result, typeMapper));\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * static, converts parser results to syntax tree structure\r\n     *\r\n     * @param results array of GeneratorState\r\n     * @return CaptureNode root node of the capture tree\r\n     */\r\n    fromResults: function(results, typeMapper) {\r\n\r\n        var root = new CaptureNode();\r\n        var current = root;\r\n        var lastStack = [];\r\n        var result, stack, diff, node;\r\n\r\n        // process each result\r\n\r\n        for (var resultId in results) {\r\n            result = results[resultId];\r\n            stack = result.stack;\r\n\r\n            // diff stack against previous stack\r\n\r\n            diff = stackDiff(stack, lastStack, result.minStack);\r\n\r\n            // ascend as far as required\r\n\r\n            while (diff.ascend--) {\r\n                current = current.parent;\r\n            }\r\n\r\n            // attach new nodes\r\n\r\n            for (var nodeId in diff.create) {\r\n                node = diff.create[nodeId];\r\n                current = current.addNew(node.capture, node.name, typeMapper(node.capture, node.name));\r\n                current.row = result.token.pos.row;\r\n                current.col = result.token.pos.col;\r\n            }\r\n\r\n            // attach the actual match\r\n\r\n            node = result.node;\r\n\r\n            if (node.capture !== '') {\r\n                var match = current.addNew(node.capture, result.token.data, typeMapper(node.capture, node.name));\r\n                match.row = result.token.pos.row;\r\n                match.col = result.token.pos.col;\r\n            }\r\n\r\n            // lastStack for the next token\r\n\r\n            lastStack = stack;\r\n        }\r\n\r\n        return root;\r\n    },\r\n\r\n    isNode: function() {\r\n        return this.col !== -1;\r\n    },\r\n\r\n    isLeaf: function() {\r\n        return (this.children instanceof Array === false);\r\n    },\r\n\r\n    isBranch: function() {\r\n        return (this.children instanceof Array);\r\n    },\r\n\r\n    length: function() {\r\n        return (this.children instanceof Array ? this.children.length : 0);\r\n    },\r\n\r\n    /**\r\n     * returns number of parents above node\r\n     *\r\n     * @return int depth\r\n     */\r\n    depth: function() {\r\n\r\n        var result = 0;\r\n        var current = this;\r\n\r\n        while (current.parent instanceof CaptureNode) {\r\n\r\n            result += 1;\r\n            current = current.parent;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * returns ancestor with matching key and/or value\r\n     *\r\n     * @return CaptureNode or null\r\n     */\r\n    ancestor: function(key, value) {\r\n\r\n        var current = this;\r\n\r\n        key = (typeof key !== 'string' ? null : key.split('|')); //!todo use an array as parameter...\r\n        value = (typeof value !== 'string' ? null : value.split('|'));\r\n\r\n        if (key !== null && value !== null) {\r\n            while (current.parent instanceof CaptureNode && key.indexOf(current.parent.key) === -1 && value.indexOf(current.parent.value) === -1) {\r\n                current = current.parent;\r\n            }\r\n        } else if (key !== null) {\r\n            while (current.parent instanceof CaptureNode && key.indexOf(current.parent.key) === -1) {\r\n                current = current.parent;\r\n            }\r\n        } else if (value !== null) {\r\n            while (current.parent instanceof CaptureNode && value.indexOf(current.parent.value) === -1) {\r\n                current = current.parent;\r\n            }\r\n        }\r\n\r\n        if (current.parent instanceof CaptureNode) {\r\n            return current.parent;\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * returns the LanguageParser object owning this node\r\n     *\r\n     * @return LanguageParser or null\r\n     */\r\n    parser: function() {\r\n\r\n        var current = this;\r\n\r\n        while (current.parent !== null && (current.parent instanceof CaptureNode.LanguageParser === false)) {\r\n            current = current.parent;\r\n        }\r\n\r\n        return current.parent;\r\n    },\r\n\r\n    /**\r\n     * adds given stringnode to this node\r\n     *\r\n     * @param StringNode child new node to add\r\n     * @return StringNode given StringNode\r\n     */\r\n    add: function(child) {\r\n\r\n        if (this.children == null) {\r\n            this.children = [ ];\r\n        }\r\n\r\n        this.children.push(child);\r\n        return child;\r\n    },\r\n\r\n    /**\r\n     * get the <index>th node that matches key with index = 0 being the first node\r\n     *\r\n     * @param string key node key to find\r\n     * @param int index which of multiple key-matching nodes\r\n     * @return CaptureNode or null\r\n     */\r\n    get: function(key, index, dummy) {\r\n\r\n        index = (index === undefined ? 0 : index);\r\n        dummy = (dummy === undefined ? this.dummy : null);\r\n\r\n        if (this.children instanceof Array) {\r\n\r\n            for (var id in this.children) {\r\n                var child = this.children[id];\r\n\r\n                if (child.key == key && index-- == 0) {\r\n                    return child;\r\n                }\r\n            }\r\n        }\r\n\r\n        return dummy;\r\n    },\r\n\r\n    /**\r\n     * chains multiple get calls from input path, split by ., id indicated in array notation\r\n     * i.e. this.path('value.function[3].body')\r\n     *\r\n     * @return CaptureNode or null\r\n     */\r\n    path: function(path, dummy) {\r\n\r\n        var step;\r\n        var current = this;\r\n\r\n        dummy = (dummy === undefined ? this.dummy : null);\r\n        path = path.split('.');\r\n\r\n        for (var id in path) {\r\n            step = path[id].split('[');\r\n\r\n            if (step.length === 1) {\r\n                current = current.get(step[0]);\r\n            } else {\r\n                current = current.get(step[0], parseInt(step[1].slice(0, -1)));\r\n            }\r\n\r\n            if (current === null) {\r\n                return dummy;\r\n            }\r\n        }\r\n\r\n        return current;\r\n    },\r\n\r\n    /**\r\n     * creates and adds a stringnode of given subclass to this node\r\n     *\r\n     * @param string? key node key\r\n     * @param string? value node value\r\n     * @param Type node_type type of the newly created and added node. must be subtype of StringNode\r\n     * @return StringNode the newly created StringNode\r\n     */\r\n    addNew: function(key, value, Type) {\r\n\r\n        var child = new Type(key, value);\r\n\r\n        assert(child != null);\r\n\r\n        child.parent = this;\r\n\r\n        return this.add(child);\r\n    },\r\n\r\n    /**\r\n     * returns a newline and optionally increases or decreases indentation for the following lines\r\n     *\r\n     * @param indent change in indentation\r\n     */\r\n    nl: function(indent) {\r\n\r\n        indent = (indent === undefined ? 0 : indent);\r\n\r\n        var parser = this.parser();\r\n        parser.indent += indent;\r\n        return '\\n' + String.repeat(parser.indent * 4, ' ');\r\n    },\r\n\r\n    /**\r\n     * creates and returns a new sourcenode based on CaptureNode's position and given code\r\n     *\r\n     * @param code\r\n     */\r\n    csn: function(code) {\r\n\r\n        return new SourceNode(this.row, this.col -1, this.parser().file, code); //!todo why is everthing offset by one if I don't subtract 1 here? col start at 0, row at 1? unlikely\r\n    },\r\n\r\n    /**\r\n     * default node to string handler, returns empty string but calls children recursively\r\n     *\r\n     * @return string\r\n     */\r\n    toString: function() {\r\n\r\n        var result = '';\r\n\r\n        if (this.children instanceof Array) {\r\n            for (var id in this.children) {\r\n                result += this.children[id].toString();\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * default node to source-node handler, returns empty node but calls children recursively\r\n     *\r\n     * @return string\r\n     */\r\n    toSourceNode: function() {\r\n\r\n        var result = new SourceNode(null, null);\r\n\r\n        if (this.children instanceof Array) {\r\n            for (var id in this.children) {\r\n                result.add(this.children[id].toSourceNode());\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n\r\n    /**\r\n     * iterate over all childnodes\r\n     *\r\n     * @param NodeCallback function(node, first, last)\r\n     */\r\n    each: function(fn) {\r\n\r\n        var children = this.children;\r\n\r\n        if (children instanceof Array) {\r\n\r\n            var last = children.length -1;\r\n\r\n            for (var id in children) {\r\n                fn.call(this, children[id], +id === 0, +id === last);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * iterate over all childnodes with given key\r\n     *\r\n     * @param string key node key\r\n     * @param NodeCallback function(node, first, last)\r\n     */\r\n    eachKey: function(key, fn) {\r\n\r\n        var part = key.split('.');\r\n\r\n        if (this.children instanceof Array) {\r\n\r\n            var children = this.children;\r\n            var len = children.length;\r\n            var prevChild = null;\r\n            var first = true;\r\n            var id;\r\n\r\n            for (id = 0; id < len; id++) {\r\n                var child = children[id];\r\n\r\n                if (child.key === part[0]) {\r\n                    if (part.length === 1) {\r\n\r\n                        // delay by one loop to be able to identify the last item\r\n\r\n                        if (prevChild !== null) {\r\n                            fn.call(this, prevChild, first, false);\r\n                            first = false;\r\n                        }\r\n\r\n                        prevChild = child;\r\n\r\n                    } else if (part.length > 1) {\r\n                        child.eachKey(part.slice(1).join('.'), fn);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // last item\r\n\r\n            if (prevChild.key === part[0] && part.length === 1) {\r\n                fn.call(this, prevChild, false, true);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * initialize a template object for this node and set the file to be used during tplGenerate()\r\n     *\r\n     * @param string fileName\r\n     */\r\n    setTemplate: function(fileName) {\r\n\r\n        this.tpl = new Template();\r\n        this.tplFile = fileName;\r\n    },\r\n\r\n    /**\r\n     * returns generated template string for previously selected template file and assigned values\r\n     *\r\n     * @return string generated template string\r\n     */\r\n    processTemplate: function() {\r\n\r\n        assert(this.tpl instanceof Template);\r\n\r\n        return this.tpl.fetchFile(this.tplFile);\r\n    },\r\n\r\n    /**\r\n     * assigns a value to the current template\r\n     *\r\n     * @param string uri qualified variable name\r\n     * @param any value\r\n     */\r\n    assign: function(uri, value) {\r\n\r\n        this.tpl.assign(uri, value);  //!todo assign to uri like target\r\n    },\r\n};\r\n\r\n/**\r\n * dummy returned by some functions as a convenience\r\n */\r\nCaptureNode::dummy = new CaptureNode('', '');\r\nCaptureNode::dummy.row = -1;\r\nCaptureNode::dummy.col = -1;\r\n\r\n/**\r\n * compares two stacks and returns number of parent-acends and list of capture desends to get from\r\n * lastStack to stack\r\n *\r\n * @param stack current stack\r\n * @param lastStack stack at last processed token\r\n * @param minStackLen the minimum size the stack had between the tokens for stack and lastStack\r\n */\r\nvar stackDiff = function(stack, lastStack, minStackLen) {\r\n\r\n    // find deepest capture node that is present in both current and last stack\r\n\r\n    var deepestCommonCapture = -1;\r\n    var minLen = Math.min(stack.length, lastStack.length, minStackLen);\r\n\r\n    for (var i = 0; i < minLen; i++) {\r\n        if (stack[i].node === lastStack[i].node) {\r\n            if (stack[i].node.capture !== '') {\r\n                deepestCommonCapture = i;\r\n            }\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // find number of captures between deepest common capture and deepest previous capture\r\n    // this is the number of nodes fromResults() needs to ascend before attaching new capture nodes\r\n\r\n    var numCaptures = 0;\r\n    var lastLen = lastStack.length;\r\n\r\n    for (var i = deepestCommonCapture + 1; i < lastLen; i++) {\r\n        if (lastStack[i].node.capture !== '') {\r\n            numCaptures++;\r\n        }\r\n    }\r\n\r\n    // find all capture nodes below the deepest common capture\r\n    // fromResults() will have to create capture nodes for these\r\n\r\n    var captures = [];\r\n    var len = stack.length;\r\n\r\n    for (var i = deepestCommonCapture + 1; i < len; i++) {\r\n        if (stack[i].node.capture !== '') {\r\n            captures.push(stack[i].node);\r\n        }\r\n    }\r\n\r\n    return { ascend: numCaptures, create: captures };\r\n};\r\n\r\n/**\r\n * exports immediate node-children to array of strings\r\n *\r\n * @param bool include_leafs include leaf nodes\r\n * @param bool include_branches include branch nodes\r\n * @param bool return_keys export node keys instead of node values to array\r\n * @return array of string\r\n */\r\n /*\r\nCaptureNode.prototype.toArray = function(include_leafs, include_branches, return_keys) {\r\n\r\n    include_leafs       = (include_leafs === undefined ? true : include_leafs);\r\n    include_branches    = (include_branches === undefined ? false : include_branches);\r\n    return_keys         = (return_keys === undefined ? false : return_keys);\r\n\r\n    var result = [ ];\r\n\r\n    if (this.isBranch()) {\r\n\r\n        for (var id in this.children) {\r\n            var child = this.children[id];\r\n\r\n            if ((include_leafs && child.isLeaf()) || (include_branches && child.isBranch())) {\r\n\r\n                if (return_keys !== true) {\r\n                    result.push(child.value);\r\n                } else {\r\n                    result.push(child.key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n*/\r\n\r\n/**\r\n * runs toString on all siblings of this node (nodes that share the same parent and key)\r\n *\r\n * @return array of strings\r\n */\r\n /*\r\nCaptureNode.prototype.siblingsToString = function() {\r\n\r\n    assert(this.parent instanceof CaptureNode && this.parent.children instanceof Array);\r\n\r\n    var result = [ ];\r\n    var siblings = this.parent.children;\r\n\r\n    for (var id in siblings) {\r\n        var sibling = siblings[id];\r\n\r\n        if (sibling.key === this.key) {\r\n            result.push(sibling.toString());\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n*/\r\n\r\n\r\n/**\r\n * scan for symbol definitions\r\n *\r\n * @param LanguageParser owner the parser containing this node\r\n * @param Transform.Scope scope the current scope, initially this.transform.rootScope .\r\n *          scope generating nodes should instantiate a \"new Transform.Scope(scope)\" and pass it on to their child-nodes\r\n * @param int pass how often this function was called before with symbols still unresolved\r\n * @return int number of unresolved symbols\r\n */\r\n/*CaptureNode.prototype.scanSymbols = function(owner, scope) {\r\n\r\n    var result = 0;\r\n\r\n    if (this.children instanceof Array) {\r\n        for (var id in this.children) {\r\n            result += this.children[id].scanSymbols(owner, scope);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};*/\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar fs = require('fs');\r\n\r\nvar XRegExp = require('./xregexp');\r\nvar util = require('./util');\r\nvar Parser = require('./parser');\r\nvar DefinitionParser = require('./definition_parser');\r\nvar CaptureNode = require('./language_parser/capture_node');\r\n\r\n/**\r\n * Parser subclass with the capability to use a secondary DefinitionParser to train itself from .sdt-files. Defines\r\n * defintion fiel entities entry, return, string, numeric as well as literal match (i.e. \"matchme\") and definition jumps\r\n * (by using the name of a definition as match component)\r\n * Also provides CaptureNode baseclass to convert parser captures into an object tree of userdefined node-types.\r\n */\r\nmodule LanguageParser = proto(Parser) {\r\n\r\n    /**\r\n     * @var DefinitionParser trainer secondary parser that will be used to train this one\r\n     */\r\n    trainer: null,\r\n\r\n    /**\r\n     * @var String input file\r\n     */\r\n    sourceCode: null,\r\n\r\n    /**\r\n     * @var CaptureNode captureTree contains capture result tree after file parsing\r\n     */\r\n    captureTree: null,\r\n\r\n    /**\r\n     * @var Object extra data accumulated during parsing\r\n     */\r\n    resultData: null,\r\n\r\n    /**\r\n     * @var Object cache file metadata\r\n     */\r\n    cacheData: null,\r\n\r\n    /**\r\n     * @var String method used for output generation\r\n     */\r\n    outputMethod: 'toSourceNode',\r\n\r\n    /**\r\n     * construct new instance\r\n     *\r\n     * @param transform the applications transform object\r\n     */\r\n    constructor: function(transform) {\r\n\r\n        Parser->constructor(transform);\r\n\r\n        this.transform = transform;\r\n        this.resultData = { };\r\n    },\r\n\r\n    /**\r\n     * constructs new instance referencing source's definition and\r\n     * transform link\r\n     */\r\n    clone: function() {\r\n\r\n        var parser = Parser->clone();\r\n        parser.transform = this.transform;\r\n        parser.source = this.source;\r\n        return parser;\r\n    },\r\n\r\n    /**\r\n     * reset definition, then train this parser with currently loaded .sdt-file definitions\r\n     * this is done using the integrate_node_pair() and createNode() methods\r\n     */\r\n    trainSelf: function() {\r\n\r\n        assert(this.trainer != null);\r\n\r\n        this.definition = new Parser.Definition();\r\n        this.trainer.trainOther(this);\r\n        this.trainer = null;\r\n    },\r\n\r\n    /**\r\n     * load definition (currently from file)\r\n     *\r\n     * @param string resource name\r\n     * @return bool false if the file could not be opened\r\n     */\r\n    loadDefinition: function(resource) {\r\n\r\n        util.log('LanguageParser', 'loading defintion file ' + resource);\r\n\r\n        var fileContents = fs.readFileSync(resource, 'UTF-8');\r\n\r\n        // feed file contents to secondary parser\r\n\r\n        if (this.trainer == null) {\r\n            this.trainer = new DefinitionParser();\r\n        }\r\n\r\n        util.log('LanguageParser', 'processing definition', 2);\r\n        this.trainer.file = resource;\r\n        this.trainer.parse(fileContents);\r\n        util.log('LanguageParser', 'done', -2);\r\n    },\r\n\r\n    /**\r\n     * build symbol table hierarchy\r\n     */\r\n    /*scanSymbols: function()  {\r\n        return this.captureTree.scanSymbols(this, this.transform.rootScope);\r\n    },*/\r\n\r\n    /**\r\n     * called during capture list to tree conversion process to select an appropriate node-type\r\n     */\r\n    mapType: function(capture_name, block_name) {\r\n        return CaptureNode;\r\n    },\r\n\r\n    /**\r\n     * map a path node (\"name:capture[label]?condition\") to a new parser node. used by secondary DefinitionParser\r\n     *\r\n     * @param string name path node name part\r\n     * @param string capture capture part\r\n     * @param string label label part\r\n     * @param string condition condition part\r\n     * @return Parser.Definition.Node new definition node\r\n     */\r\n    createNode: function(name, capture, label, condition) {\r\n\r\n        var Node = Parser.Definition.Node;\r\n        var node = new Node();\r\n\r\n        node.name       = name;\r\n        node.capture    = capture;\r\n        node.label      = label;\r\n        node.condition  = condition;\r\n\r\n        switch (name) {\r\n            case 'entry':\r\n            case 'return':\r\n                node.match          = name; //!todo is this used somewhere somehow? it cannot be used as a match\r\n                node.tokenType      = -1;\r\n                node.type           = (name == 'entry' ? Node.Type.BLOCK : Node.Type.RETURN);\r\n                node.description    = name;\r\n                break;\r\n\r\n            case 'string':\r\n                node.match          = '';\r\n                node.tokenType      = this.tokenizer.Type.STRING;\r\n                node.type           = 0;\r\n                node.description    = 'string';\r\n                break;\r\n\r\n            case 'numeric':\r\n                node.match          = '';\r\n                node.tokenType      = this.tokenizer.Type.NUMERIC;\r\n                node.type           = 0;\r\n                node.description    = 'numerical';\r\n                break;\r\n\r\n            default:\r\n                var numChars = name.length;\r\n\r\n                if (name[0] == '\\\"') {\r\n\r\n                    // string match\r\n\r\n                    assert(numChars >= 3);\r\n\r\n                    node.match          = XRegExp('^' + XRegExp.escape(name.slice(1, numChars -1)) + '$', 's');\r\n                    node.tokenType      = -1;\r\n                    node.type           = 0;\r\n                    node.description    = name.slice(1, numChars -1);\r\n\r\n                } else if (name[0] == '\\'') {\r\n\r\n                    // regex match\r\n\r\n                    assert(numChars >= 3);\r\n\r\n                    node.match          = XRegExp(name.slice(1, numChars -1), 's');\r\n                    node.tokenType      = -1;\r\n                    node.type           = 0;\r\n                    node.description    = name.slice(1, numChars -1);\r\n\r\n                } else {\r\n\r\n                    // definition jump\r\n\r\n                    node.match          = name;\r\n                    node.tokenType      = -1;\r\n                    node.type           = Node.Type.JUMP;\r\n                    node.description    = 'definition jump';\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    /**\r\n     * integrate a pair of two nodes into the definition. used by secondary DefinitionParser\r\n     *\r\n     * @param pair\r\n     * @param blockName\r\n     */\r\n    integrateNodePair: function(pair, blockName) {\r\n\r\n        // connect both nodes of the pair (add return type nodes to the tail(!), others to the head)\r\n\r\n        pair[0].add(pair[1], Parser.Definition.Node.Type.RETURN & pair[1].type);\r\n\r\n        // append entry-node to definition (once only as it is already fully connected)\r\n\r\n        if (pair[0].type == Parser.Definition.Node.Type.BLOCK && this.definition.haveBlock(blockName) == false) {\r\n\r\n            this.definition.createBlock(blockName, pair[0]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * set source data and process it to a CaptureNode tree\r\n     *\r\n     * @param string resource name (for display)\r\n     * @param string data contents\r\n     */\r\n    setSource: function(resource, data) {\r\n\r\n        // load source file\r\n\r\n        this.captureTree = null;\r\n        this.file = resource;\r\n        this.sourceCode = data.replace('\\r\\n', '\\n');\r\n\r\n        // parse file contents\r\n\r\n        util.log('LanguageParser', 'processing source ' + resource, 2);\r\n        var captures = this.parse(this.sourceCode);\r\n        util.log('LanguageParser', 'done', -2);\r\n\r\n        this.captureTree = CaptureNode::fromResults(captures, this.mapType.bind(this));\r\n        this.captureTree.parent = this;\r\n    },\r\n\r\n    /**\r\n     * try to load sourcefile from cache\r\n     *\r\n     * @param resource\r\n     */\r\n    loadSourceFromCache: function(resource) {\r\n\r\n        this.cacheData = this.transform.cache.fetch(resource, [ 'base'/*, 'resultData'*/ ]);\r\n\r\n        if (this.cacheData !== null) {\r\n            this.file = resource;\r\n            this.captureTree = CaptureNode::fromJSON(this.cacheData['base'], this, this.mapType.bind(this));\r\n            //this.resultData = this.unserializeData(this.cacheData['resultData']);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * load source file and process it to a CaptureNode tree\r\n     *\r\n     * @param string resource name\r\n     */\r\n    loadSource: function(resource) {\r\n\r\n        // try to load from cache\r\n\r\n        if (this.transform.options.nocache !== true && this.cacheData === null) {\r\n            this.loadSourceFromCache(resource);\r\n        }\r\n\r\n        // check if now available from cache, if not, parse\r\n\r\n        if (this.cacheData === null) {\r\n            this.setSource(resource, fs.readFileSync(resource, 'UTF-8').replace(\"var assert = require('assert');\", '')); //!todo temporary hack for node sources\r\n        }\r\n    },\r\n\r\n    /**\r\n     * process the parse captures into output format\r\n     *\r\n     * @return string output string\r\n     */\r\n    output: function() {\r\n\r\n        var result;\r\n\r\n        // generate result\r\n\r\n        var InitialType = this.mapType('', this.definition.initialBlock);\r\n        result = InitialType.prototype[this.outputMethod].call(this.captureTree);\r\n\r\n        // write new data to cache (don't write it again if it just came from the cache)\r\n\r\n        if (this.transform.options.nocache !== true && this.cacheData === null && fs.existsSync(this.file)) {\r\n\r\n            this.transform.cache.insert(this.file, {\r\n                base        : this.captureTree.toJSON(),\r\n                //resultData  : this.serializeData(this.resultData)\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nCaptureNode.LanguageParser = LanguageParser; //!ugly, find better way to avoid circular require\r\nLanguageParser.CaptureNode = CaptureNode;\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nvar path = require('path');\r\nvar SourceNode = require('source-map').SourceNode;\r\nvar LanguageParser = require('../language_parser');\r\nvar CaptureNode = LanguageParser.CaptureNode;\r\nvar Transform = require('../transform');\r\nvar util = require('../util');\r\nvar Set = util.Set;\r\n\r\n\r\nexport AccessOperationProtocall = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var params = this.get('call');\r\n        var result = this.csn();\r\n\r\n        result.add([ '.prototype.', this.csn(this.get('item').value), '.call(this' ]);\r\n\r\n        params.each(function(param) {\r\n            result.add([ ', ', param.toSourceNode() ]);\r\n        });\r\n\r\n        result.add(')');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ConstLiteral = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var stringNode = this.get('string');\r\n\r\n        if (stringNode.isNode()) {\r\n            return this.csn(stringNode.value);\r\n        } else {\r\n            return this.csn(this.get('numeric').value);\r\n        }\r\n    },\r\n};\r\n\r\nexport Scope = proto (CaptureNode) {\r\n\r\n    locals: null,\r\n\r\n    constructor: function(key, value) {\r\n        this.locals = new Set();\r\n        CaptureNode->constructor(key, value);\r\n    },\r\n\r\n    toSourceNode: function() {\r\n\r\n        // prefix content with local variable\r\n\r\n        var content = CaptureNode->toSourceNode();\r\n        var result = this.csn();\r\n\r\n        if (this.locals.length > 0) {\r\n            result.add([ 'var ', this.locals.toArray().join(', '), ';' + this.nl() ]);\r\n        }\r\n\r\n        result.add(content);\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport YieldingScope = Scope;\r\n\r\nexport Module = proto (CaptureNode) {\r\n\r\n    moduleExport: null,\r\n    exports: null,\r\n    locals: null,\r\n\r\n    constructor: function(key, value) {\r\n        this.exports = new Set();\r\n        this.locals = new Set();\r\n        CaptureNode->constructor(key, value);\r\n    },\r\n\r\n    toSourceNode: function() {\r\n\r\n        var parser = this.parser();\r\n\r\n        this.nl(1);\r\n\r\n        var code = CaptureNode->toSourceNode();\r\n        var locals = this.locals.toArray();\r\n        var exports = this.exports.toArray();\r\n        var file = parser.file;\r\n\r\n        var result = this.csn('module(\"' + parser.moduleName + '\", function(module) {' + this.nl());\r\n\r\n        // tweak: commonJS module.exports shortcut\r\n\r\n        if (parser.transform.options['tweak-exports']) {\r\n            result.add('var exports = module.exports;' + this.nl());\r\n        }\r\n\r\n        if (locals.length > 0) {\r\n            result.add('var ' + locals.join(', ') + ';' + this.nl());\r\n        }\r\n\r\n        result.add(code);\r\n\r\n        if (this.moduleExport !== null) {\r\n            result.add('module.exports = ' + this.moduleExport + ';' + this.nl());\r\n        }\r\n\r\n        for (var id in exports) {\r\n            result.add('module.exports.' + exports[id] + ' = ' + exports[id] + ';' + this.nl());\r\n        }\r\n\r\n        result.add(this.nl(-1) + '});' + this.nl());\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport InvokeOperation = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n        result.add('(');\r\n\r\n        this.each(function(node, first) {\r\n\r\n            if (first === false) {\r\n                result.add(', ');\r\n            }\r\n\r\n            result.add(node.toSourceNode());\r\n        });\r\n\r\n        result.add(')');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport FunctionLiteral = proto (CaptureNode) {\r\n\r\n    defaultArgs: null,\r\n    name: null,\r\n\r\n    constructor: function(key, value) {\r\n        this.defaultArgs = [ ];\r\n        CaptureNode->constructor(key, value);\r\n    },\r\n\r\n    toSourceNode: function() {\r\n\r\n        // indent child content, compensate by not indenting at opening {\r\n\r\n        this.nl(1);\r\n\r\n        // fetch function name either directly from function, or if not given, from left side of assignment\r\n\r\n        var nameNode = this.get('name');\r\n\r\n        if (nameNode.isNode() === false) {\r\n            nameNode = this.ancestor(null, 'expression|dec_def|proto_body_item');\r\n\r\n            if (nameNode !== null) {\r\n\r\n                if (nameNode.value === 'proto_body_item') {\r\n\r\n                    // fetch name from prototype literal item\r\n\r\n                    this.name = nameNode.get('key').toSourceNode();\r\n\r\n                } else if (nameNode.value === 'expression') {\r\n\r\n                    // fetch name from left side of assignment (use only last fragment of symbol)\r\n\r\n                    var children = nameNode.children;\r\n                    var id, found = -1;\r\n\r\n                    for (id = 0; id < children.length; id++) {\r\n                        if (children[id].key === 'assignment_op') {\r\n                            found = id - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (found !== -1 && children[found].value === 'access_operation_member') {\r\n                        this.name = children[found].csn(children[found].get('item').value);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            this.name = nameNode.toSourceNode();\r\n        }\r\n\r\n        // construct result string\r\n\r\n        var result = this.csn();\r\n        result.add('function');\r\n\r\n        var generator = this.get('generator');\r\n\r\n        if (generator.isNode()) {\r\n            result.add(generator.csn(generator.value));\r\n        }\r\n\r\n        if (this.name !== null) {\r\n            result.add([ ' ', this.name ]);\r\n        }\r\n\r\n        result.add('(');\r\n        result.add(this.get('param_list').toSourceNode());\r\n        result.add(') {' + this.nl());\r\n\r\n        for (var id in this.defaultArgs) {\r\n            result.add([ this.defaultArgs[id], ';' + this.nl() ]);\r\n        }\r\n\r\n        result.add([ this.get('body').toSourceNode(), this.nl(-1) + '}' ]);\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport GeneratorLiteral = FunctionLiteral;\r\nexport FunctionStatement = FunctionLiteral;\r\nexport GeneratorStatement = FunctionLiteral;\r\n\r\nexport FunctionParamList = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var name, defaultArg, valueNode;\r\n        var result = this.csn();\r\n        var functionNode = this.ancestor('function');\r\n\r\n        this.eachKey('item', function(node) {\r\n\r\n            name = node.get('name').toSourceNode();\r\n\r\n            result.add(name);\r\n\r\n            // check for default args, push those to FunctionLiteral's defaultArgs property\r\n\r\n            valueNode = node.get('value');\r\n\r\n            if (valueNode.isNode()) {\r\n\r\n                defaultArg = new SourceNode();\r\n                defaultArg.add([ name, ' = (', name, ' !== undefined ? ', name, ' : (', valueNode.toSourceNode(), '))' ]);\r\n                functionNode.defaultArgs.push(defaultArg);\r\n            }\r\n        });\r\n\r\n        return result.join(', ');\r\n    },\r\n};\r\n\r\nexport BaseLiteral = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = '';\r\n\r\n        this.each(function(child) {\r\n            switch (child.key) {\r\n                case 'numeric':\r\n                case 'string':\r\n                case 'regexp':\r\n                case 'ident':\r\n                case 'brace':\r\n                    result += this.csn(child.value);\r\n                    break;\r\n\r\n                default:\r\n                    result += child.toSourceNode();\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport DoWhileStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n        result.add('do {' + this.nl(1));\r\n        result.add(this.get('body').toSourceNode());\r\n        result.add(this.nl(-1) + '}');\r\n        result.add([ ' while (', this.get('condition').toSourceNode(), ');' ]);\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport WhileStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n        result.add([ 'while (', this.get('condition').toSourceNode(), ') {' + this.nl(1) ]);\r\n        result.add(this.get('body').toSourceNode());\r\n        result.add(this.nl(-1) + '}');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport IfStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n        result.add([ 'if (', this.get('condition').toSourceNode(), ') {' + this.nl(1) ]);\r\n        result.add([ this.get('if_body').toSourceNode(), this.nl(-1) + '}' ]);\r\n\r\n        var elseIf = this.get('else_if');\r\n\r\n        if (elseIf.isNode()) {\r\n\r\n            result.add([' else ', elseIf.toSourceNode() ]);\r\n\r\n        } else {\r\n\r\n            var elseBody = this.get('else_body');\r\n\r\n            if (elseBody.isNode()) {\r\n                result.add([ ' else {' + this.nl(1), elseBody.toSourceNode(), this.nl(-1) + '}' ]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport SwitchStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n        result.add([ 'switch (', this.get('value').toSourceNode(), ') {', this.nl(1) ]);\r\n\r\n        // cases\r\n\r\n        this.eachKey('case', function(caseNode) {\r\n\r\n            result.add(['case ', caseNode.get('match').toSourceNode(), ':' + this.nl(1) ]);\r\n            result.add(caseNode.get('body').toSourceNode());\r\n            result.add(this.nl(-1));\r\n        });\r\n\r\n        // default case\r\n\r\n        var defaultNode = this.get('default');\r\n\r\n        if (defaultNode.isNode()) {\r\n            result.add('default:' + this.nl(1));\r\n            result.add(defaultNode.get('body').toSourceNode());\r\n            result.add(this.nl(-1));\r\n        }\r\n\r\n        result.add(this.nl(-1) + '}');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ForCountStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var initNode = this.get('init');\r\n        var init;\r\n\r\n        if (initNode.value === 'var_def') {\r\n\r\n            var varDefs = this.csn();\r\n\r\n            initNode.eachKey('item', function(node) {\r\n\r\n                var valueNode = node.get('value');\r\n                var nameNode = node.get('name');\r\n\r\n                if (valueNode.isNode()) {\r\n                    var varDef = new SourceNode();\r\n                    varDef.add([ nameNode.toSourceNode(), ' = ', valueNode.toSourceNode() ]);\r\n                    varDefs.add(varDef);\r\n                } else {\r\n                    varDefs.add(nameNode.toSourceNode);\r\n                }\r\n            });\r\n\r\n            init = new SourceNode();\r\n            init.add([ 'var ', varDefs.join(', ') ]);\r\n\r\n        } else {\r\n\r\n            init = initNode.toSourceNode();\r\n        }\r\n\r\n        var test = this.get('test').toSourceNode();\r\n        var condOp = this.get('cond_op').toSourceNode();\r\n\r\n        var result = this.csn();\r\n        result.add([ 'for (', init, '; ', test, ';', condOp, ') {' + this.nl(1) ]);\r\n        result.add(this.get('body').toSourceNode());\r\n        result.add(this.nl(-1) + '}');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ForInStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var keyNode = this.get('key');\r\n        var valueNode = this.get('value');\r\n\r\n        if (this.get('var').isNode()) {\r\n\r\n            var locals = this.ancestor(null, 'yielding_scope|scope|module').locals;\r\n            locals.add(keyNode.value);\r\n\r\n            if (valueNode.isNode()) {\r\n                locals.add(valueNode.value);\r\n            }\r\n        }\r\n\r\n        var source = this.get('source').toSourceNode();\r\n        var key = keyNode.toSourceNode();\r\n\r\n        var result = this.csn();\r\n        result.add('for (');\r\n        result.add(key);\r\n        result.add(' in ');\r\n        result.add(source);\r\n        result.add(') {' + this.nl(1));\r\n\r\n        if (valueNode.isNode()) {\r\n            result.add([ valueNode.toSourceNode(), ' = ', source, '[', key, '];', this.nl() ]);\r\n        }\r\n\r\n        result.add([ this.get('body').toSourceNode(), this.nl(-1), '}' ]);\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ObjectLiteral = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var items = new SourceNode();\r\n\r\n        // indent now, so that children will be indented. correct for this by not indenting during return\r\n\r\n        this.nl(1);\r\n\r\n        this.each(function(child) {\r\n            var item = new SourceNode();\r\n            item.add(child.get('key').csn(child.get('key').value));\r\n            item.add(': ');\r\n            item.add(child.get('value').toSourceNode());\r\n            items.add(item);\r\n        });\r\n\r\n        var result =  this.csn();\r\n\r\n        if (items.toString().length >= 60) {\r\n\r\n            result.add('{' + this.nl());\r\n            result.add(items.join(',' + this.nl()));\r\n            result.add(this.nl() + this.nl(-1) + '}');\r\n\r\n        } else {\r\n\r\n            this.nl(-1);\r\n            result.add('{ ');\r\n            result.add(items.join(', '));\r\n            result.add(' }');\r\n        }\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\nexport ProtoBodyProperty = ObjectLiteral;\r\n\r\nexport ArrayLiteral = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var items = new SourceNode();\r\n\r\n        // indent now, so that children will be indented. correct for this by not indenting during return\r\n\r\n        this.nl(1);\r\n\r\n        this.each(function(child) {\r\n            items.add(child.toSourceNode());\r\n        });\r\n\r\n        var result = this.csn();\r\n\r\n        if (items.toString().length >= 60) {\r\n\r\n            result.add('[' + this.nl());\r\n            result.add(items.join(',' + this.nl()));\r\n            result.add(this.nl() + this.nl(-1) + ']');\r\n\r\n        } else {\r\n\r\n            this.nl(-1);\r\n            result.add('[ ');\r\n            result.add(items.join(', '));\r\n            result.add(' ]');\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport Expression = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var children = this.children;\r\n        var child;\r\n        var propertyAssignSplit = -1;\r\n        var result = this.csn();\r\n\r\n        for (var id in children) {\r\n            child = children[id];\r\n\r\n            if (children[+id+1] !== undefined && children[+id+1].key === 'passignment_op') {\r\n                propertyAssignSplit = +id + 1;\r\n                break;\r\n            }\r\n\r\n            switch (child.key) {\r\n                case 'member':\r\n                    result.add(child.csn('.' + child.children[0].value));\r\n                    break;\r\n                case 'index':\r\n                    result.add(child.csn('['));\r\n                    result.add(child.toSourceNode());\r\n                    result.add(child.csn(']'));\r\n                    break;\r\n                case 'proto':\r\n                    result.add(child.csn('.prototype.' + child.children[0].value));\r\n                    break;\r\n                case 'call':\r\n                case 'pcall':\r\n                    result.add(child.csn(child.toSourceNode()));\r\n                    break;\r\n                case 'ident':\r\n                case 'brace_op':\r\n                case 'xfix_op':\r\n                    result.add(child.csn(child.value));\r\n                    break;\r\n                case 'unary_op':\r\n                    result.add(child.csn(child.value.search(/[a-z]/) > -1 ? child.value + ' ' : child.value));\r\n                    break;\r\n                case 'binary_op':\r\n                case 'assignment_op':\r\n                case 'ternary_op':\r\n                    result.add([ ' ', child.csn(child.value), ' ' ]);\r\n                    break;\r\n                default:\r\n                    result.add(child.toSourceNode());\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (propertyAssignSplit > -1) {\r\n\r\n            result.prepend('Object.defineProperty(');\r\n            child = children[propertyAssignSplit - 1];\r\n\r\n            switch (child.key) {\r\n                case 'member':\r\n                    result.add(\", '\" + child.children[0].value + \"',\");\r\n                    break;\r\n                case 'index':\r\n                    result.add(', ');\r\n                    result.add(child.toSourceNode());\r\n                    result.add(', ');\r\n                    break;\r\n                case 'proto':\r\n                    result.add(\".prototype, '\" + child.children[0].value + \"', \");\r\n                    break;\r\n            }\r\n\r\n            if (children[propertyAssignSplit].value === ':=') {\r\n                result.add('{' + this.nl(1) + 'value: ');\r\n                result.add(children[propertyAssignSplit + 1].toSourceNode());\r\n                result.add(',' + this.nl() + 'writable: false' + this.nl(-1) + '})');\r\n            } else {\r\n                result.add(children[propertyAssignSplit + 1].toSourceNode());\r\n                result.add(')');\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\nexport ProtoLiteral = proto (CaptureNode) {\r\n\r\n    constructorArgs: null,\r\n    constructorBody: null,\r\n    constructorDefaults: null,\r\n    name: '',\r\n\r\n    constructor: function(key, value) {\r\n\r\n        this.constructorArgs = [ ];\r\n        this.constructorDefaults = [ ];\r\n        CaptureNode->constructor(key, value);\r\n    },\r\n\r\n    toSourceNode: function() {\r\n\r\n        // fetch proto name either directly from proto, or if not given, from left side of assignment\r\n\r\n        var nameNode = this.get('name');\r\n\r\n        if (nameNode.isNode() === false) {\r\n            this.name = this.ancestor(null, 'dec_def|module_statement|export_statement').get('name').value;\r\n        } else {\r\n            this.name = nameNode.value;\r\n        }\r\n\r\n        // get parent name\r\n\r\n        var parentNode = this.get('parent');\r\n        var haveParent = parentNode.isNode();\r\n\r\n        // generate output\r\n\r\n        var result = this.csn('(function(' + (haveParent ? '___parent' : '') + ') {' + this.nl(1));\r\n        var body = this.get('body').toSourceNode();\r\n\r\n        // user- or default-constructor\r\n\r\n        if (this.constructorBody !== null) {\r\n\r\n            result.add('function ' + this.name + '(');\r\n            result.add(this.constructorArgs);\r\n            result.add(') {' + this.nl(1));\r\n\r\n            for (var id in this.constructorDefaults) {\r\n                result.add(this.constructorDefaults[id]);\r\n                result.add(';' + this.nl());\r\n            }\r\n\r\n            result.add(this.constructorBody);\r\n            result.add(this.nl(-1) + '}' + this.nl() + this.nl());\r\n\r\n        } else {\r\n\r\n            result.add('function ' + this.name + '() {');\r\n\r\n            if (haveParent) {\r\n                result.add(this.nl(1) + '___parent.apply(this, arguments);' + this.nl(-1));\r\n            }\r\n\r\n            result.add('}' + this.nl() + this.nl());\r\n        }\r\n\r\n        // chain to parent\r\n\r\n        if (haveParent) {\r\n            result.add(this.name + '.prototype = Object.create(___parent.prototype);' + this.nl());\r\n            result.add(this.name + '.prototype.constructor = ' + this.name + ';' + this.nl() + this.nl());\r\n        }\r\n\r\n        // body elements\r\n\r\n        result.add(body);\r\n\r\n        // close and return\r\n\r\n        result.add(this.nl() + 'return ' + this.name + ';' + this.nl(-1));\r\n        result.add('})(');\r\n        result.add(parentNode.toSourceNode());\r\n        result.add(')');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ProtoBodyItem = proto (CaptureNode) {\r\n\r\n    toSourceNode: function()  {\r\n\r\n        var protoNode = this.ancestor(null, 'proto_literal');\r\n        var constructorName = protoNode.name;\r\n        var keyNode = this.get('key');\r\n\r\n        // set constructor attributes in ProtoLiteral, do the rest ourselves\r\n\r\n        if (keyNode.value === 'constructor') {\r\n\r\n            var functioNode = this.path('value.function');\r\n            protoNode.constructorArgs = functioNode.get('param_list').toSourceNode();\r\n            protoNode.constructorBody = functioNode.get('body').toSourceNode();\r\n            protoNode.constructorDefaults = functioNode.defaultArgs;\r\n            return this.csn();\r\n\r\n        } else {\r\n\r\n            var valueNode = this.get('value');\r\n            var result;\r\n\r\n            if  (valueNode.value === 'proto_body_property') {\r\n\r\n                var name = (keyNode.value === 'string' ? keyNode.value : '\"' + keyNode.value + '\"');\r\n\r\n                result = this.csn('Object.defineProperty(' + constructorName + '.prototype, ' + name + ', ');\r\n                result.add(valueNode.toSourceNode());\r\n                result.add(');' + this.nl());\r\n                return result;\r\n\r\n            } else {\r\n\r\n                var name = (keyNode.value === 'string' ? '[' + keyNode.value + ']' : '.' + keyNode.value);\r\n\r\n                result = this.csn(constructorName + '.prototype' + name + ' = ');\r\n                result.add(valueNode.toSourceNode());\r\n                result.add(';' + this.nl());\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport ReturnStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n        var type = this.get('type');\r\n\r\n        result.add([ type.csn(type.value), ' ' ]);\r\n        result.add(this.get('value').toSourceNode());\r\n        result.add(';' + this.nl());\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport YieldStatement = ReturnStatement;\r\n\r\n\r\nvar catchSpecificsId = 1;\r\n\r\nexport CatchSpecifics = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var name = '___exc' + (catchSpecificsId++);\r\n\r\n        var result = this.csn();\r\n        result.add(' catch (' + name + ') {' + this.nl(1));\r\n\r\n        // specifics\r\n\r\n        this.eachKey('specific', function(node, first, last) {\r\n\r\n            if (first !== true) {\r\n                result.add(' else ');\r\n            }\r\n\r\n            result.add('if (' + name + ' instanceof ');\r\n            result.add(node.get('type').toSourceNode());\r\n            result.add(') {' + this.nl(1));\r\n            result.add('var ' + node.get('value').value + ' = ' + name + ';' + this.nl());\r\n            result.add(node.get('body').toSourceNode());\r\n            result.add(this.nl(-1) + '}');\r\n        });\r\n\r\n        // optional all catch\r\n\r\n        var allNode = this.get('catch');\r\n\r\n        if (allNode.isNode()) {\r\n\r\n            result += ' else { ' + this.nl(1);\r\n            result += 'var ' + allNode.get('value').value + ' = ' + name + ';' + this.nl();\r\n            result += allNode.get('body').toString();\r\n            result += this.nl(-1) + '}';\r\n\r\n        } else {\r\n\r\n            result += ' else { ' + this.nl(1);\r\n            result += 'throw ' + name + ';' + this.nl();\r\n            result += this.nl(-1) + '}';\r\n        }\r\n\r\n        result += this.nl(-1) + '}';\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\n\r\nexport CatchAll = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n\r\n        result.add(' catch (');\r\n        result.add(this.get('value').toSourceNode());\r\n        result.add(') {' + this.nl(1));\r\n        result.add(this.get('body').toSourceNode());\r\n        result.add(this.nl(-1) + '}');\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport TryCatchFinallyStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n\r\n        result.add('try {' + this.nl(1));\r\n        result.add(this.get('body').toSourceNode());\r\n        result.add(this.nl(-1) + '}');\r\n\r\n        var allNode = this.get('all');\r\n\r\n        if (allNode.isNode()) {\r\n            result.add(allNode.toSourceNode());\r\n        } else {\r\n            result.add(this.get('specifics').toSourceNode());\r\n        }\r\n\r\n        var finallyNode = this.get('finally');\r\n\r\n        if (finallyNode.isNode()) {\r\n            result.add('finally {' + this.nl(1));\r\n            result.add(finallyNode.toSourceNode());\r\n            result.add(this.nl(-1) + '}');\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ThrowStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn('throw ');\r\n        result.add(this.get('exception').toSourceNode());\r\n        result.add(';' + this.nl());\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport AssertStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var result = this.csn();\r\n\r\n        if (this.parser().transform.options.assert) {\r\n            result.add('assert(');\r\n            result.add(CaptureNode->toSourceNode());\r\n            result.add(');' + this.nl());\r\n        }\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\nexport Statement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var type = this.children[0].key;\r\n        var result = this.csn();\r\n\r\n        result.add(CaptureNode->toSourceNode());\r\n\r\n        switch (type) {\r\n            case 'expression':\r\n                result.add(';' + this.nl());\r\n                break;\r\n\r\n            default:\r\n                result.add(this.nl());\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport InterruptibleStatement = Statement;\r\n\r\nexport RequireLiteral = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var parser = this.parser();\r\n        var options = parser.transform.options;\r\n        var fileNode = this.get('file');\r\n        var moduleName = fileNode.toSourceNode().toString().slice(1, -1);\r\n\r\n        var result = this.csn();\r\n\r\n        if (options.platform === 'node') {\r\n\r\n            // don't embed include path node modules\r\n\r\n            if (moduleName.slice(0, 2) === './' || moduleName.slice(0, 3) === '../') {\r\n\r\n                // node js require paths are relative to the current module, make relative to base path\r\n\r\n                var currentDir = path.dirname(parser.file);\r\n                var absName = currentDir + '/' + moduleName;\r\n                var relName = path.relative(options.basePath, absName);\r\n\r\n                parser.resultData.requires.add(relName);\r\n                result.add('__require(');\r\n                result.add(fileNode.csn(\"'\" + relName + \"'\"));\r\n                result.add(')');\r\n                return result;\r\n            }\r\n\r\n        } else {\r\n\r\n            parser.resultData.requires.add(moduleName);\r\n        }\r\n\r\n        result.add('require(');\r\n        result.add(fileNode.toSourceNode());\r\n        result.add(')');\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ModuleStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var name = this.get('name').value;\r\n        var moduleNode = this.ancestor(null, 'module');\r\n        moduleNode.moduleExport = name;\r\n        moduleNode.locals.add(name);\r\n\r\n        var result = this.csn();\r\n        result.add(name);\r\n        result.add(' = ');\r\n        result.add(this.get('value').toSourceNode());\r\n        result.add(';' + this.nl());\r\n        return result;\r\n    },\r\n};\r\n\r\nexport ExportStatement = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var name = this.get('name').value;\r\n        var moduleNode = this.ancestor(null, 'module');\r\n        moduleNode.exports.add(name);\r\n        moduleNode.locals.add(name);\r\n\r\n        var result = this.csn();\r\n        result.add(name);\r\n        result.add(' = ');\r\n        result.add(this.get('value').toSourceNode());\r\n        result.add(';' + this.nl());\r\n        return result;\r\n    },\r\n};\r\n\r\nexport GlobalDef = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var valueNode, nameNode;\r\n        var globals = this.parser().resultData.globals;\r\n        var result = this.csn();\r\n        var nl = this.nl();\r\n\r\n        this.eachKey('item', function(node) {\r\n            nameNode = node.get('name');\r\n            valueNode = node.get('value');\r\n\r\n            globals.add(nameNode.value);\r\n\r\n            if (valueNode.isNode()) {\r\n                result.add(nameNode.value + ' = ');\r\n                result.add(valueNode.toSourceNode());\r\n                result.add(';' + nl);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\nexport Ident = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n        return this.csn(this.value);\r\n    }\r\n};\r\n\r\nexport Name = Ident;\r\n\r\nexport VarDef = proto (CaptureNode) {\r\n\r\n    toSourceNode: function() {\r\n\r\n        var valueNode, nameNode;\r\n        var locals = this.ancestor(null, 'yielding_scope|scope|module').locals;\r\n        var result = this.csn();\r\n        var nl = this.nl();\r\n\r\n        this.eachKey('item', function(node) {\r\n            nameNode = node.get('name');\r\n            valueNode = node.get('value');\r\n\r\n            locals.add(nameNode.value);\r\n\r\n            if (valueNode.isNode()) {\r\n                result.add(nameNode.value + ' = ');\r\n                result.add(valueNode.toSourceNode());\r\n                result.add(';' + nl);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\n/*\r\n * parent accessor\r\n */\r\n/*\r\nvar ParentCall = AdriaNode('parent_call');\r\n\r\nParentCall.prototype.toString = function() {\r\n\r\n    var node = this.ancestor(null, 'assignment|proto_literal');\r\n\r\n    if (node.isNode()) {\r\n\r\n        var funcNode = this.ancestor('function', 'function_literal');\r\n        var params = this.get('param_list').toString();\r\n\r\n        if (node.value === 'proto_literal') {\r\n\r\n            var parentName = node.get('parent').toString();\r\n            return (parentName !== '' ? parentName : 'Object') + '.prototype.' + funcNode.name + '.call(this' + (params !== '' ? ', ' + params : '') + ')';\r\n\r\n        } else if (node.value === 'assignment') {\r\n\r\n            var ownName = node.get('name').toString();\r\n            ownName = ownName.slice(0, ownName.lastIndexOf('.prototype'));\r\n            //ownName = ownName.slice(ownName.lastIndexOf('.') + 1);\r\n\r\n            return 'Object.getPrototypeOf(' + ownName + '.prototype).' + funcNode.name + '.call(this' + (params !== '' ? ', ' + params : '') + ')';\r\n        }\r\n\r\n    }\r\n\r\n    throw new Error('usage of parent keyword restricted to prototype methods');\r\n};\r\n*/","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar fs = require('fs');\r\nvar util = require('../util');\r\nvar LanguageParser = require('../language_parser');\r\nvar AdriaNode = require('./adria_node');\r\nvar Tokenizer = require('../tokenizer');\r\n\r\n/**\r\n * LanguageParser subclass defining additional Adria specific .sdt-file\r\n * entities and setting up blockname to class mappings.\r\n */\r\nmodule AdriaParser = proto(LanguageParser) {\r\n\r\n    moduleName: '',\r\n    indent: 0,\r\n\r\n    constructor: function(transform) {\r\n\r\n        LanguageParser->constructor(transform);\r\n\r\n        this.resultData = {\r\n            globals: new util.Set(),\r\n            requires: new util.Set(),\r\n        };\r\n    },\r\n\r\n    /**\r\n     * initialize a tokenizer, load definition files into a trainer and call parent's trainself, which\r\n     * will use the trainer to genererate the definition for this parser\r\n     */\r\n    trainSelf: function() {\r\n\r\n        var keywords = new util.Set([\r\n            'var', 'global',\r\n            'if', 'else',\r\n            'for', 'in', 'do', 'while',\r\n            'throw', 'try', 'catch', 'finally',\r\n            'function', 'proto', 'property',\r\n            'switch', 'case',\r\n            'require', 'assert',\r\n            'delete', 'new',\r\n            'instanceof', 'typeof'\r\n        ]);\r\n\r\n        var matchKeywords = function(match) {\r\n\r\n            if (keywords.has(match.data)) {\r\n                match.name = 'KEYWORD';\r\n            }\r\n            return match;\r\n        };\r\n\r\n        this.tokenizer = new Tokenizer([\r\n            Tokenizer.prefab.delimited(null, '/*', '*/'),\r\n            Tokenizer.prefab.regex(null, /^\\/\\/.*/),\r\n            Tokenizer.prefab.breaker(),\r\n            Tokenizer.prefab.regex('REGEXP', /^\\/([^\\/]*?(?:[^\\n\\\\]|\\\\\\\\)+?)+?\\/[a-z]*/),\r\n            Tokenizer.prefab.set('DELIM', [ ';', '.', ',', '(', ')', '[', ']', '{', '}', '!==', '!=', '!', '++', '--' ]),\r\n            Tokenizer.prefab.group('DELIM', [ '=', '&', '|', '<', '>', ':', '?', '+', '-', '*', '/', '%' ]),\r\n            Tokenizer.prefab.regex('IDENT', /^[a-zA-Z_\\$][a-zA-Z0-9_\\$]*/, matchKeywords),\r\n            Tokenizer.prefab.number('NUMERIC'),\r\n            Tokenizer.prefab.regex('STRING', /^([\"'])(?:(?=(\\\\?))\\2[\\s\\S])*?\\1/),\r\n        ], [ 'KEYWORD' ]);\r\n\r\n        util.log('AdriaParser', 'trainer processing adria .sdt-files', 2);\r\n        this.loadDefinition('definition/adria/control.sdt');\r\n        this.loadDefinition('definition/adria/expression.sdt');\r\n        this.loadDefinition('definition/adria/literal.sdt');\r\n        this.loadDefinition('definition/adria/proto.sdt');\r\n        this.loadDefinition('definition/adria/root.sdt');\r\n        this.loadDefinition('definition/adria/statement.sdt');\r\n\r\n        util.log('AdriaParser', 'being trained', -2);\r\n        LanguageParser->trainSelf();\r\n        util.log('AdriaParser', 'done');\r\n    },\r\n\r\n    /**\r\n     * maps capture_names to subclasses of CaptureNode\r\n     *\r\n     * @param string captureName node capture name (unused at the moment)\r\n     * @param string blockName name of the block containing the node (mapped to classname)\r\n     */\r\n    mapType: function(captureName, blockName) {\r\n\r\n        var typeName = blockName.snakeToCamel(true);\r\n    \r\n        if (typeof AdriaNode[typeName] === 'function') {\r\n            return AdriaNode[typeName];\r\n        }\r\n\r\n        return LanguageParser->mapType(captureName, blockName);\r\n    },\r\n\r\n    /**\r\n     * add definition file support for ident, name and regex tag\r\n     *\r\n     * @return Parser.Definition.Node\r\n     */\r\n    createNode: function(name, capture, label, condition) {\r\n\r\n        var node = LanguageParser.prototype.createNode.call(this, name, capture, label, condition);\r\n\r\n        if (name === 'ident') {\r\n\r\n            node.match          = '';\r\n            node.type           = 0;\r\n            node.tokenType      = this.tokenizer.Type.IDENT;\r\n            node.description    = 'identifier';\r\n\r\n        } else if (name === 'name') {\r\n\r\n            node.match          = '';\r\n            node.type           = 0;\r\n            node.tokenType      = this.tokenizer.Type.IDENT | this.tokenizer.Type.KEYWORD;\r\n            node.description    = 'name';\r\n\r\n        } else if (name === 'regexp') {\r\n\r\n            node.match          = '';\r\n            node.type           = 0;\r\n            node.tokenType      = this.tokenizer.Type.REGEXP;\r\n            node.description    = 'regexp';\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    /**\r\n     * change loadSourceFromCache behaviour to also load the original source,\r\n     * if source-mapping is enabled\r\n     *\r\n     * @see LanguageParser::loadSourceFromCache\r\n     */\r\n    loadSourceFromCache: function(resource) {\r\n\r\n        LanguageParser.prototype.loadSourceFromCache.call(this, resource);\r\n\r\n        if (this.cacheData !== null && this.transform.options.nomap !== true) {\r\n            this.sourceCode = fs.readFileSync(resource, 'UTF-8').replace('\\r\\n', '\\n');\r\n        }\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis M�hlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar SourceNode = require('source-map').SourceNode;\r\nvar Template = require('../template');\r\nvar Transform = require('../transform');\r\nvar AdriaParser = require('./adria_parser');\r\nvar util = require('../util');\r\n\r\n/**\r\n * Transforms a set of input files into one or more output files using the\r\n * Adria language transformation definition\r\n *\r\n * @see Transform\r\n */\r\nmodule AdriaTransform = proto (Transform) {\r\n\r\n    /**\r\n     * populated by globals node, names of application-wide globals\r\n     */\r\n    globals: null,\r\n\r\n    requires: null,\r\n    requiresDone: null,\r\n    modules: null,\r\n    sourceCode: null,\r\n    protoParser: null,\r\n\r\n    constructor: function(piped) {\r\n\r\n        Transform->constructor(piped);\r\n\r\n        this.globals        = new util.Set();\r\n        this.requires       = new util.Set();\r\n        this.requiresDone   = new util.Set();\r\n        this.modules        = [ ];\r\n        this.sourceCode     = { };\r\n\r\n        // defaults\r\n\r\n        var options = this.options;\r\n\r\n        options.nolink = (options.nolink === undefined ? false : options.nolink);\r\n        options.nomap = (options.nomap === undefined ? false : options.nomap);\r\n        options.fileExt = (options.fileExt === undefined ? '.adria' : options.fileExt);\r\n        options.platform = (options.platform === undefined ? 'web' : options.platform);\r\n        options['tweak-exports'] = (options['tweak-exports'] === undefined ? false : options['tweak-exports']);\r\n        options['tweak-nostrict'] = (options['tweak-nostrict'] === undefined ? false : options['tweak-nostrict']);\r\n    },\r\n\r\n    initOptions: function() {\r\n\r\n        Transform->initOptions(this);\r\n\r\n        this.defineOptions({\r\n            'file-extension': function(extension) {\r\n                this.fileExt = '.' + extension;\r\n            },\r\n            'platform': function(platform) {\r\n                this.platform = platform;\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * returns the full filename of given module\r\n     *\r\n     * @param moduleName\r\n     * @return absolute path (including filename) to module\r\n     */\r\n    resolveModule: function(moduleName) {\r\n\r\n        var slash = moduleName.lastIndexOf('/');\r\n        var baseName = slash > 0 ? moduleName.slice(slash) : moduleName;\r\n\r\n        var filename = (baseName.indexOf('.') > -1 ? moduleName : moduleName + this.options.fileExt);\r\n        var fullname = this.options.basePath + filename;\r\n        var current = fullname;\r\n\r\n        // check if file exists, if not scan path\r\n\r\n        if (fs.existsSync(fullname) !== true) {\r\n\r\n            var paths = this.options.paths;\r\n\r\n            for (var id in paths) {\r\n\r\n                current = this.options.basePath + paths[id] + filename;\r\n\r\n                if (fs.existsSync(current)) {\r\n                    fullname = current;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return path.normalize(fullname);\r\n    },\r\n\r\n    /**\r\n     * build a module and its dependencies recursively and push the\r\n     * result onto AdriaTransform::modules\r\n     *\r\n     * @param moduleName name of the module\r\n     * @param data module source code\r\n     */\r\n    buildModule: function(moduleName, data) {\r\n\r\n        // create parser from proto-parser\r\n\r\n        var parser = this.protoParser.clone();\r\n        parser.moduleName = moduleName;\r\n\r\n        if (data === undefined) {\r\n            parser.loadSource(this.resolveModule(moduleName));\r\n        } else {\r\n            parser.setSource(moduleName + this.options.fileExt, data);\r\n        }\r\n\r\n        // generate result\r\n\r\n        var result = parser.output();\r\n\r\n        // add globals and requires to transform\r\n\r\n        var requires = parser.resultData.requires;\r\n\r\n        this.requiresDone.add(moduleName);\r\n\r\n        for (var name in requires.data) {\r\n            if (this.requiresDone.has(name) === false) {\r\n                this.buildModule(name);\r\n            }\r\n        }\r\n\r\n        // these are used in the template\r\n\r\n        this.requires = this.requires.merge(parser.resultData.requires);\r\n        this.globals = this.globals.merge(parser.resultData.globals);\r\n\r\n        // push module after all dependencies have been resolved\r\n\r\n        this.modules.push({ filename: parser.file, sourceCode: parser.sourceCode, result: result });\r\n    },\r\n\r\n    /**\r\n     * generate JavaScript SourceNode output tree from built modules\r\n     */\r\n    generateOutputTree: function() {\r\n\r\n        var node = new SourceNode(null, null);\r\n        var tpl = new Template();\r\n        tpl.assign('globals', this.globals.toArray());\r\n        tpl.assign('enableAssert', this.options.assert);\r\n\r\n        // wrap with application and merge\r\n\r\n        var fwNode, moduleNode;\r\n        var fw = tpl.fetchFile('adria/framework.' + this.options.platform + '.tpl');\r\n\r\n        node.add('(function() {\\n');\r\n\r\n        // nostrict tweak\r\n\r\n        if (this.options['tweak-nostrict'] !== true) {\r\n            node.add('\"use strict\";\\n');\r\n        }\r\n\r\n        fwNode = node.add(new SourceNode(1, 0, 'adria-framework.js', fw));\r\n        fwNode.setSourceContent('adria-framework.js', fw);\r\n\r\n        for (var id in this.modules) {\r\n            var module = this.modules[id];\r\n\r\n            moduleNode = node.add(new SourceNode(null, null, module.filename, module.result));\r\n            moduleNode.setSourceContent(module.filename, module.sourceCode);\r\n        }\r\n\r\n        node.add('\\n})();');\r\n        return node;\r\n    },\r\n\r\n    /**\r\n     * entry point, run transformation\r\n     */\r\n    run: function() {\r\n\r\n        // create a prototype parser to clone from (to avoid training overhead)\r\n\r\n        this.protoParser = new AdriaParser(this);\r\n        this.protoParser.trainSelf();\r\n\r\n        // process piped data and initial files\r\n\r\n        if (this.piped !== undefined) {\r\n            this.buildModule('main', this.piped);\r\n        }\r\n\r\n        var files = this.options.files;\r\n\r\n        for (var id in files) {\r\n            this.buildModule(files[id].stripPostfix(this.options.fileExt));\r\n        }\r\n\r\n        // result\r\n\r\n        var node = this.generateOutputTree();\r\n        var options = this.options;\r\n\r\n        if (options.outFile !== null) {\r\n\r\n            var jsFile = options.basePath + options.outFile;\r\n            var mapFile = jsFile.stripPostfix('.js') + '.map';\r\n\r\n            if (options.nomap !== true) {\r\n\r\n                var result = node.toStringWithSourceMap({ file: options.outFile });\r\n                var mapLink = '\\n//@ sourceMappingURL=' + path.relative(options.basePath, mapFile);\r\n\r\n                fs.writeFileSync(jsFile, result.code + (options.nolink ? '' : mapLink));\r\n                fs.writeFileSync(mapFile, result.map);\r\n\r\n            } else {\r\n\r\n                fs.writeFileSync(jsFile, node.toString());\r\n            }\r\n\r\n        } else {\r\n\r\n            process.stdout.write(node.toString());\r\n        }\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar AdriaParser = require('./adria_parser');\r\nvar CaptureNode = require('../language_parser/capture_node');\r\n\r\n/**\r\n * AST node that returns XML like output for AST debugging purposes\r\n *\r\n * @see CaptureNode\r\n */\r\nvar XMLNode = proto(CaptureNode) {\r\n\r\n    toString: function() {\r\n\r\n        var indent = String.repeat(this.depth() * 4, ' ');\r\n        var result = \"\";\r\n\r\n        for (var childId in this.children) {\r\n\r\n            var node = this.children[childId];\r\n\r\n            if (node.isLeaf()) {\r\n                result += indent + \"<\" + node.key + \" value=\\\"\" + node.value.replace(/\\\"/g, '\\\\\"') + \"\\\" />\\n\";\r\n            } else {\r\n                result += indent + \"<\" + node.key + \" value=\\\"\" + node.value.replace(/\\\"/g, '\\\\\"') + \"\\\">\\n\";\r\n                result += node.toString();\r\n                result += indent + \"</\" + node.key + \">\\n\";\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n\r\n/**\r\n * Parser that inherits behaviour from AdriaParser but outputs as XML AST tree\r\n *\r\n * @see AdriaParser\r\n */\r\nmodule AdriaDebugParser = proto(AdriaParser) {\r\n\r\n    outputMethod: 'toString',\r\n\r\n    mapType: function(capture_name, block_name) {\r\n        return XMLNode;\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nvar AdriaTransform = require('./adria_transform');\r\nvar AdriaDebugParser = require('./adriadebug_parser');\r\n\r\n/**\r\n * Transforms a set of input files into an XML string representing the file's\r\n * syntax tree.\r\n *\r\n * @see Transform\r\n */\r\nmodule AdriaDebugTransform = proto(AdriaTransform) {\r\n\r\n    constructor: function(piped) {\r\n\r\n        AdriaTransform->constructor(piped);\r\n\r\n        this.options.nocache = true;\r\n    },\r\n\r\n    process: function() {\r\n\r\n        // create a prototype parser to clone from (to avoid training overhead)\r\n\r\n        this.protoParser = new AdriaDebugParser(this);\r\n        this.protoParser.trainSelf();\r\n\r\n        // process piped data and initial files\r\n\r\n        if (this.piped !== undefined) {\r\n            this.buildModule('main', this.piped);\r\n        }\r\n\r\n        var files = this.options.files;\r\n\r\n        for (var id in files) {\r\n            this.buildModule(files[id].stripPostfix(this.options.fileExt));\r\n        }\r\n\r\n        // extract result for join\r\n\r\n        var result = [];\r\n\r\n        for (var id, mod in this.modules) {\r\n            result.push(mod.result);\r\n        }\r\n\r\n        // merge and return\r\n\r\n        if (this.options['outFile'] !== null) {\r\n            fs.writeFileSync(this.options['outFile'], result.join('\\n'));\r\n        } else {\r\n            process.stdout.write(result.join('\\n'));\r\n        }\r\n    },\r\n};\r\n","/*\n * The MIT License (MIT)\r\n *\r\n * Copyright (C) 2013 Dennis Möhlmann <mail@dennismoehlmann.de>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nrequire('./src/prototype');\r\nvar util = require('./src/util');\r\n\r\nvar AdriaTransform = require('./src/extensions/adria_transform');\r\nvar AdriaDebugTransform = require('./src/extensions/adriadebug_transform');\r\n\r\n// process base command line\r\n\r\nvar target  = 'adria';\r\nvar piped = false;\r\n\r\nutil.processOptions(null, {\r\n    'target': function(type) {\r\n        target = type;\r\n    },\r\n    '_switch': function(param) {\r\n        if (param === 'pipe') {\r\n            piped = true;\r\n        }\r\n    }\r\n});\r\n\r\n// transformation performer\r\n\r\nvar run = function(pipeData) {\r\n\r\n    var transform;\r\n\r\n    //try {\r\n\r\n        if (target === 'adria') {\r\n            transform = new AdriaTransform(pipeData);\r\n        } else if (target === 'adriadebug') {\r\n            transform = new AdriaDebugTransform(pipeData);\r\n        } else {\r\n            throw new Error('Unsupported target \"' + target+ '\".');\r\n        }\r\n\r\n        transform.run();\r\n\r\n    //} catch (e) {\r\n\r\n    //    console.log(e.message);\r\n    //}\r\n};\r\n\r\n// process stdin or run directly\r\n\r\nif (piped) {\r\n\r\n    var pipeData = '';\r\n\r\n    process.stdin.on('data', function(data) {\r\n        pipeData += data.toString();\r\n    });\r\n\r\n    process.stdin.on('end', function() {\r\n        run(pipeData);\r\n    });\r\n\r\n    process.stdin.resume();\r\n\r\n} else {\r\n\r\n    run();\r\n}"]}